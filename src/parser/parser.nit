# Parser.
# This file was generated by SableCC (http://www.sablecc.org/).
module parser

intrude import parser_prod
import tables

# State of the parser automata as stored in the parser stack.
private class State
	# The internal state number
	readable writable var _state: Int

	# The node stored with the state in the stack
	readable writable var _nodes: nullable Object

	init(state: Int, nodes: nullable Object)
	do
		_state = state
		_nodes = nodes
	end
end

class Parser
	super TablesCapable
	# Associated lexer
	var _lexer: Lexer

	# Stack of pushed states and productions
	var _stack: Array[State]

	# Position in the stack
	var _stack_pos: Int

	# Create a new parser based on a given lexer
	init(lexer: Lexer)
	do
		_lexer = lexer
		_stack = new Array[State]
		_stack_pos = -1
		build_reduce_table
	end

	# Do a transition in the automata
	private fun go_to(index: Int): Int
	do
		var state = state
		var low = 1
		var high = parser_goto(index, 0) - 1

		while low <= high do
			var middle = (low + high) / 2
			var subindex = middle * 2 + 1 # +1 because parser_goto(index, 0) is the length

			var goal = parser_goto(index, subindex)
			if state < goal then
				high = middle - 1
			else if state > goal then
				low = middle + 1
			else
				return parser_goto(index, subindex+1)
			end
		end

		return parser_goto(index, 2) # Default value
	end

	# Push someting in the state stack
	private fun push(numstate: Int, list_node: nullable Object)
	do
		var pos = _stack_pos + 1
		_stack_pos = pos
		if pos < _stack.length then
			var state = _stack[pos]
			state.state = numstate
			state.nodes = list_node
		else
			_stack.push(new State(numstate, list_node))
		end
	end

	# The current state
	private fun state: Int
	do
		return _stack[_stack_pos].state
	end

	# Pop something from the stack state
	private fun pop: nullable Object
	do
		var res = _stack[_stack_pos].nodes
		_stack_pos = _stack_pos -1
		return res
	end

	# Build and return a full AST.
	fun parse: Start
	do
		push(0, null)

		var lexer = _lexer
		loop
			var token = lexer.peek
			if token isa AError then
				return new Start(null, token)
			end

			var state = self.state
			var index = token.parser_index
			var action_type = parser_action(state, 2)
			var action_value = parser_action(state, 3)

			var low = 1
			var high = parser_action(state, 0) - 1

			while low <= high do
				var middle = (low + high) / 2
				var subindex = middle * 3 + 1 # +1 because parser_action(state, 0) is the length

				var goal = parser_action(state, subindex)
				if index < goal then
					high = middle - 1
				else if index > goal then
					low = middle + 1
				else
					action_type = parser_action(state, subindex+1)
					action_value = parser_action(state, subindex+2)
					break
				end
			end

			if action_type == 0 then # SHIFT
				push(action_value, lexer.next)
			else if action_type == 1 then # REDUCE
				_reduce_table[action_value].action(self)
			else if action_type == 2 then # ACCEPT
				var node2 = lexer.next
				assert node2 isa EOF
				var node1 = pop
				assert node1 isa AModule
				var node = new Start(node1, node2)
				(new ComputeProdLocationVisitor).enter_visit(node)
				return node
			else if action_type == 3 then # ERROR
				var node2 = new AParserError.init_parser_error("Syntax error: unexpected {token}.", token.location, token)
				var node = new Start(null, node2)
				return node
			end
		end
	end

	var _reduce_table: Array[ReduceAction]
	private fun build_reduce_table
	do
		_reduce_table = new Array[ReduceAction].with_items(
			new ReduceAction0(0),
			new ReduceAction1(0),
			new ReduceAction2(0),
			new ReduceAction3(0),
			new ReduceAction4(0),
			new ReduceAction5(0),
			new ReduceAction6(0),
			new ReduceAction7(0),
			new ReduceAction8(0),
			new ReduceAction9(0),
			new ReduceAction10(0),
			new ReduceAction11(0),
			new ReduceAction12(0),
			new ReduceAction13(0),
			new ReduceAction14(0),
			new ReduceAction15(0),
			new ReduceAction16(0),
			new ReduceAction17(0),
			new ReduceAction18(0),
			new ReduceAction19(0),
			new ReduceAction20(0),
			new ReduceAction21(0),
			new ReduceAction22(0),
			new ReduceAction23(0),
			new ReduceAction24(0),
			new ReduceAction25(0),
			new ReduceAction26(0),
			new ReduceAction27(0),
			new ReduceAction28(0),
			new ReduceAction29(0),
			new ReduceAction30(0),
			new ReduceAction31(0),
			new ReduceAction32(0),
			new ReduceAction33(0),
			new ReduceAction34(0),
			new ReduceAction35(0),
			new ReduceAction36(0),
			new ReduceAction37(0),
			new ReduceAction38(0),
			new ReduceAction39(0),
			new ReduceAction40(0),
			new ReduceAction41(0),
			new ReduceAction42(0),
			new ReduceAction43(0),
			new ReduceAction44(0),
			new ReduceAction45(0),
			new ReduceAction46(0),
			new ReduceAction47(0),
			new ReduceAction48(0),
			new ReduceAction49(0),
			new ReduceAction50(0),
			new ReduceAction51(0),
			new ReduceAction52(0),
			new ReduceAction53(0),
			new ReduceAction54(0),
			new ReduceAction55(0),
			new ReduceAction56(0),
			new ReduceAction57(0),
			new ReduceAction58(0),
			new ReduceAction59(0),
			new ReduceAction60(0),
			new ReduceAction61(0),
			new ReduceAction62(0),
			new ReduceAction63(0),
			new ReduceAction64(1),
			new ReduceAction65(1),
			new ReduceAction66(2),
			new ReduceAction67(2),
			new ReduceAction68(2),
			new ReduceAction69(3),
			new ReduceAction70(3),
			new ReduceAction71(4),
			new ReduceAction71(4),
			new ReduceAction73(5),
			new ReduceAction74(5),
			new ReduceAction75(5),
			new ReduceAction76(5),
			new ReduceAction75(5),
			new ReduceAction78(5),
			new ReduceAction79(5),
			new ReduceAction78(5),
			new ReduceAction81(5),
			new ReduceAction82(5),
			new ReduceAction83(5),
			new ReduceAction84(5),
			new ReduceAction83(5),
			new ReduceAction86(5),
			new ReduceAction87(5),
			new ReduceAction86(5),
			new ReduceAction89(5),
			new ReduceAction90(5),
			new ReduceAction91(5),
			new ReduceAction92(5),
			new ReduceAction91(5),
			new ReduceAction94(5),
			new ReduceAction95(5),
			new ReduceAction94(5),
			new ReduceAction97(5),
			new ReduceAction98(5),
			new ReduceAction99(5),
			new ReduceAction100(5),
			new ReduceAction99(5),
			new ReduceAction102(5),
			new ReduceAction103(5),
			new ReduceAction102(5),
			new ReduceAction105(5),
			new ReduceAction106(5),
			new ReduceAction107(5),
			new ReduceAction108(5),
			new ReduceAction107(5),
			new ReduceAction110(5),
			new ReduceAction111(5),
			new ReduceAction110(5),
			new ReduceAction113(5),
			new ReduceAction114(5),
			new ReduceAction115(5),
			new ReduceAction116(5),
			new ReduceAction115(5),
			new ReduceAction118(5),
			new ReduceAction119(5),
			new ReduceAction118(5),
			new ReduceAction121(5),
			new ReduceAction122(5),
			new ReduceAction123(5),
			new ReduceAction124(5),
			new ReduceAction123(5),
			new ReduceAction126(5),
			new ReduceAction127(5),
			new ReduceAction126(5),
			new ReduceAction129(5),
			new ReduceAction130(5),
			new ReduceAction131(5),
			new ReduceAction132(5),
			new ReduceAction131(5),
			new ReduceAction134(5),
			new ReduceAction135(5),
			new ReduceAction134(5),
			new ReduceAction137(5),
			new ReduceAction138(5),
			new ReduceAction139(5),
			new ReduceAction140(5),
			new ReduceAction139(5),
			new ReduceAction142(5),
			new ReduceAction143(5),
			new ReduceAction142(5),
			new ReduceAction145(5),
			new ReduceAction146(5),
			new ReduceAction147(5),
			new ReduceAction148(5),
			new ReduceAction147(5),
			new ReduceAction150(5),
			new ReduceAction151(5),
			new ReduceAction150(5),
			new ReduceAction153(5),
			new ReduceAction154(5),
			new ReduceAction155(5),
			new ReduceAction156(5),
			new ReduceAction155(5),
			new ReduceAction158(5),
			new ReduceAction159(5),
			new ReduceAction158(5),
			new ReduceAction161(5),
			new ReduceAction162(5),
			new ReduceAction163(5),
			new ReduceAction164(5),
			new ReduceAction163(5),
			new ReduceAction166(5),
			new ReduceAction167(5),
			new ReduceAction166(5),
			new ReduceAction169(5),
			new ReduceAction170(5),
			new ReduceAction171(5),
			new ReduceAction172(5),
			new ReduceAction171(5),
			new ReduceAction174(5),
			new ReduceAction175(5),
			new ReduceAction174(5),
			new ReduceAction177(5),
			new ReduceAction178(5),
			new ReduceAction179(5),
			new ReduceAction180(5),
			new ReduceAction179(5),
			new ReduceAction182(5),
			new ReduceAction183(5),
			new ReduceAction182(5),
			new ReduceAction185(5),
			new ReduceAction186(5),
			new ReduceAction187(5),
			new ReduceAction188(5),
			new ReduceAction187(5),
			new ReduceAction190(5),
			new ReduceAction191(5),
			new ReduceAction190(5),
			new ReduceAction193(5),
			new ReduceAction194(5),
			new ReduceAction195(5),
			new ReduceAction196(5),
			new ReduceAction195(5),
			new ReduceAction198(5),
			new ReduceAction199(5),
			new ReduceAction198(5),
			new ReduceAction201(5),
			new ReduceAction202(5),
			new ReduceAction203(5),
			new ReduceAction204(5),
			new ReduceAction203(5),
			new ReduceAction206(5),
			new ReduceAction207(5),
			new ReduceAction206(5),
			new ReduceAction209(5),
			new ReduceAction210(5),
			new ReduceAction211(5),
			new ReduceAction212(5),
			new ReduceAction211(5),
			new ReduceAction214(5),
			new ReduceAction215(5),
			new ReduceAction214(5),
			new ReduceAction217(5),
			new ReduceAction218(5),
			new ReduceAction219(5),
			new ReduceAction220(5),
			new ReduceAction219(5),
			new ReduceAction222(5),
			new ReduceAction223(5),
			new ReduceAction222(5),
			new ReduceAction225(5),
			new ReduceAction226(5),
			new ReduceAction227(5),
			new ReduceAction228(5),
			new ReduceAction227(5),
			new ReduceAction230(5),
			new ReduceAction231(5),
			new ReduceAction230(5),
			new ReduceAction233(5),
			new ReduceAction234(5),
			new ReduceAction235(5),
			new ReduceAction236(5),
			new ReduceAction235(5),
			new ReduceAction238(5),
			new ReduceAction239(5),
			new ReduceAction238(5),
			new ReduceAction241(5),
			new ReduceAction242(5),
			new ReduceAction243(5),
			new ReduceAction244(5),
			new ReduceAction243(5),
			new ReduceAction246(5),
			new ReduceAction247(5),
			new ReduceAction246(5),
			new ReduceAction249(5),
			new ReduceAction250(5),
			new ReduceAction251(5),
			new ReduceAction252(5),
			new ReduceAction251(5),
			new ReduceAction254(5),
			new ReduceAction255(5),
			new ReduceAction254(5),
			new ReduceAction257(5),
			new ReduceAction258(5),
			new ReduceAction259(5),
			new ReduceAction260(5),
			new ReduceAction259(5),
			new ReduceAction262(5),
			new ReduceAction263(5),
			new ReduceAction262(5),
			new ReduceAction265(5),
			new ReduceAction266(5),
			new ReduceAction267(5),
			new ReduceAction268(5),
			new ReduceAction267(5),
			new ReduceAction270(5),
			new ReduceAction271(5),
			new ReduceAction270(5),
			new ReduceAction273(5),
			new ReduceAction274(5),
			new ReduceAction275(5),
			new ReduceAction276(5),
			new ReduceAction275(5),
			new ReduceAction278(5),
			new ReduceAction279(5),
			new ReduceAction278(5),
			new ReduceAction281(5),
			new ReduceAction282(5),
			new ReduceAction283(5),
			new ReduceAction284(5),
			new ReduceAction283(5),
			new ReduceAction286(5),
			new ReduceAction287(5),
			new ReduceAction286(5),
			new ReduceAction289(5),
			new ReduceAction290(5),
			new ReduceAction291(5),
			new ReduceAction292(5),
			new ReduceAction291(5),
			new ReduceAction294(5),
			new ReduceAction295(5),
			new ReduceAction294(5),
			new ReduceAction297(5),
			new ReduceAction298(5),
			new ReduceAction299(5),
			new ReduceAction300(5),
			new ReduceAction299(5),
			new ReduceAction302(5),
			new ReduceAction303(5),
			new ReduceAction302(5),
			new ReduceAction305(5),
			new ReduceAction306(5),
			new ReduceAction307(5),
			new ReduceAction308(5),
			new ReduceAction307(5),
			new ReduceAction310(5),
			new ReduceAction311(5),
			new ReduceAction310(5),
			new ReduceAction313(5),
			new ReduceAction314(5),
			new ReduceAction315(5),
			new ReduceAction316(5),
			new ReduceAction315(5),
			new ReduceAction318(5),
			new ReduceAction319(5),
			new ReduceAction318(5),
			new ReduceAction321(5),
			new ReduceAction322(5),
			new ReduceAction323(5),
			new ReduceAction324(5),
			new ReduceAction323(5),
			new ReduceAction326(5),
			new ReduceAction327(5),
			new ReduceAction326(5),
			new ReduceAction329(6),
			new ReduceAction330(6),
			new ReduceAction331(6),
			new ReduceAction332(6),
			new ReduceAction333(6),
			new ReduceAction334(6),
			new ReduceAction335(6),
			new ReduceAction336(7),
			new ReduceAction337(7),
			new ReduceAction338(8),
			new ReduceAction339(9),
			new ReduceAction340(9),
			new ReduceAction341(9),
			new ReduceAction342(9),
			new ReduceAction343(10),
			new ReduceAction344(10),
			new ReduceAction345(11),
			new ReduceAction346(12),
			new ReduceAction347(12),
			new ReduceAction348(12),
			new ReduceAction349(12),
			new ReduceAction350(12),
			new ReduceAction351(12),
			new ReduceAction352(12),
			new ReduceAction353(12),
			new ReduceAction354(12),
			new ReduceAction355(12),
			new ReduceAction356(12),
			new ReduceAction357(12),
			new ReduceAction358(12),
			new ReduceAction359(12),
			new ReduceAction360(12),
			new ReduceAction361(12),
			new ReduceAction362(12),
			new ReduceAction363(12),
			new ReduceAction364(12),
			new ReduceAction365(12),
			new ReduceAction366(12),
			new ReduceAction367(12),
			new ReduceAction368(12),
			new ReduceAction369(12),
			new ReduceAction370(12),
			new ReduceAction371(12),
			new ReduceAction372(12),
			new ReduceAction373(12),
			new ReduceAction374(12),
			new ReduceAction375(12),
			new ReduceAction376(12),
			new ReduceAction377(12),
			new ReduceAction378(12),
			new ReduceAction379(12),
			new ReduceAction380(12),
			new ReduceAction381(12),
			new ReduceAction382(12),
			new ReduceAction383(12),
			new ReduceAction384(12),
			new ReduceAction385(12),
			new ReduceAction386(12),
			new ReduceAction387(12),
			new ReduceAction388(12),
			new ReduceAction389(12),
			new ReduceAction390(12),
			new ReduceAction391(12),
			new ReduceAction392(12),
			new ReduceAction393(12),
			new ReduceAction394(12),
			new ReduceAction395(12),
			new ReduceAction396(12),
			new ReduceAction397(12),
			new ReduceAction398(12),
			new ReduceAction399(12),
			new ReduceAction400(12),
			new ReduceAction401(12),
			new ReduceAction402(12),
			new ReduceAction403(12),
			new ReduceAction404(12),
			new ReduceAction405(12),
			new ReduceAction406(12),
			new ReduceAction407(12),
			new ReduceAction408(12),
			new ReduceAction409(12),
			new ReduceAction410(12),
			new ReduceAction411(12),
			new ReduceAction412(12),
			new ReduceAction413(12),
			new ReduceAction414(12),
			new ReduceAction415(12),
			new ReduceAction416(12),
			new ReduceAction417(12),
			new ReduceAction418(12),
			new ReduceAction419(12),
			new ReduceAction420(12),
			new ReduceAction421(12),
			new ReduceAction422(12),
			new ReduceAction423(12),
			new ReduceAction424(12),
			new ReduceAction425(12),
			new ReduceAction426(12),
			new ReduceAction427(12),
			new ReduceAction428(12),
			new ReduceAction429(12),
			new ReduceAction430(12),
			new ReduceAction431(12),
			new ReduceAction432(12),
			new ReduceAction433(12),
			new ReduceAction434(12),
			new ReduceAction435(12),
			new ReduceAction436(12),
			new ReduceAction437(12),
			new ReduceAction438(12),
			new ReduceAction439(12),
			new ReduceAction440(12),
			new ReduceAction441(12),
			new ReduceAction442(12),
			new ReduceAction443(12),
			new ReduceAction444(12),
			new ReduceAction445(12),
			new ReduceAction446(12),
			new ReduceAction447(12),
			new ReduceAction448(12),
			new ReduceAction449(12),
			new ReduceAction450(12),
			new ReduceAction451(12),
			new ReduceAction452(12),
			new ReduceAction453(12),
			new ReduceAction454(12),
			new ReduceAction455(12),
			new ReduceAction456(12),
			new ReduceAction457(12),
			new ReduceAction458(12),
			new ReduceAction459(12),
			new ReduceAction460(12),
			new ReduceAction461(12),
			new ReduceAction462(12),
			new ReduceAction463(12),
			new ReduceAction464(12),
			new ReduceAction465(12),
			new ReduceAction466(12),
			new ReduceAction467(12),
			new ReduceAction468(12),
			new ReduceAction469(12),
			new ReduceAction470(12),
			new ReduceAction471(12),
			new ReduceAction472(12),
			new ReduceAction473(12),
			new ReduceAction474(12),
			new ReduceAction475(12),
			new ReduceAction476(12),
			new ReduceAction477(12),
			new ReduceAction478(12),
			new ReduceAction479(12),
			new ReduceAction480(12),
			new ReduceAction481(12),
			new ReduceAction482(12),
			new ReduceAction483(12),
			new ReduceAction484(12),
			new ReduceAction485(12),
			new ReduceAction486(12),
			new ReduceAction487(12),
			new ReduceAction488(12),
			new ReduceAction489(12),
			new ReduceAction490(12),
			new ReduceAction491(12),
			new ReduceAction492(12),
			new ReduceAction493(12),
			new ReduceAction494(12),
			new ReduceAction495(12),
			new ReduceAction496(12),
			new ReduceAction497(12),
			new ReduceAction498(12),
			new ReduceAction499(12),
			new ReduceAction500(12),
			new ReduceAction501(12),
			new ReduceAction502(12),
			new ReduceAction503(12),
			new ReduceAction504(12),
			new ReduceAction505(12),
			new ReduceAction506(12),
			new ReduceAction507(12),
			new ReduceAction508(12),
			new ReduceAction509(12),
			new ReduceAction510(12),
			new ReduceAction511(12),
			new ReduceAction512(12),
			new ReduceAction513(12),
			new ReduceAction514(13),
			new ReduceAction515(13),
			new ReduceAction514(14),
			new ReduceAction517(14),
			new ReduceAction518(15),
			new ReduceAction519(15),
			new ReduceAction520(16),
			new ReduceAction521(16),
			new ReduceAction522(17),
			new ReduceAction523(17),
			new ReduceAction524(18),
			new ReduceAction525(18),
			new ReduceAction526(18),
			new ReduceAction527(18),
			new ReduceAction528(19),
			new ReduceAction529(19),
			new ReduceAction530(19),
			new ReduceAction531(19),
			new ReduceAction532(19),
			new ReduceAction533(19),
			new ReduceAction534(19),
			new ReduceAction535(19),
			new ReduceAction536(19),
			new ReduceAction537(19),
			new ReduceAction538(19),
			new ReduceAction539(19),
			new ReduceAction540(19),
			new ReduceAction541(19),
			new ReduceAction542(19),
			new ReduceAction543(19),
			new ReduceAction544(19),
			new ReduceAction545(19),
			new ReduceAction546(20),
			new ReduceAction547(20),
			new ReduceAction548(20),
			new ReduceAction549(20),
			new ReduceAction550(20),
			new ReduceAction551(20),
			new ReduceAction552(20),
			new ReduceAction553(20),
			new ReduceAction554(20),
			new ReduceAction555(20),
			new ReduceAction556(20),
			new ReduceAction557(20),
			new ReduceAction558(21),
			new ReduceAction559(21),
			new ReduceAction560(21),
			new ReduceAction561(21),
			new ReduceAction562(21),
			new ReduceAction563(21),
			new ReduceAction564(22),
			new ReduceAction565(22),
			new ReduceAction566(23),
			new ReduceAction567(24),
			new ReduceAction568(24),
			new ReduceAction569(24),
			new ReduceAction570(24),
			new ReduceAction571(24),
			new ReduceAction572(24),
			new ReduceAction573(25),
			new ReduceAction574(26),
			new ReduceAction575(26),
			new ReduceAction576(26),
			new ReduceAction577(26),
			new ReduceAction578(26),
			new ReduceAction579(26),
			new ReduceAction580(27),
			new ReduceAction581(28),
			new ReduceAction582(28),
			new ReduceAction583(29),
			new ReduceAction584(30),
			new ReduceAction584(30),
			new ReduceAction586(30),
			new ReduceAction587(31),
			new ReduceAction588(31),
			new ReduceAction589(31),
			new ReduceAction590(32),
			new ReduceAction591(32),
			new ReduceAction592(32),
			new ReduceAction593(33),
			new ReduceAction594(34),
			new ReduceAction595(34),
			new ReduceAction596(35),
			new ReduceAction597(36),
			new ReduceAction598(36),
			new ReduceAction599(36),
			new ReduceAction600(36),
			new ReduceAction601(36),
			new ReduceAction602(36),
			new ReduceAction603(36),
			new ReduceAction604(36),
			new ReduceAction605(37),
			new ReduceAction606(37),
			new ReduceAction607(38),
			new ReduceAction607(39),
			new ReduceAction609(40),
			new ReduceAction610(40),
			new ReduceAction611(40),
			new ReduceAction612(40),
			new ReduceAction613(41),
			new ReduceAction614(41),
			new ReduceAction615(42),
			new ReduceAction616(42),
			new ReduceAction617(43),
			new ReduceAction618(43),
			new ReduceAction609(44),
			new ReduceAction612(45),
			new ReduceAction612(45),
			new ReduceAction622(45),
			new ReduceAction623(45),
			new ReduceAction624(45),
			new ReduceAction625(45),
			new ReduceAction626(45),
			new ReduceAction627(45),
			new ReduceAction628(45),
			new ReduceAction629(45),
			new ReduceAction630(45),
			new ReduceAction631(45),
			new ReduceAction632(45),
			new ReduceAction612(45),
			new ReduceAction612(45),
			new ReduceAction612(45),
			new ReduceAction612(45),
			new ReduceAction612(45),
			new ReduceAction612(45),
			new ReduceAction639(45),
			new ReduceAction640(45),
			new ReduceAction641(45),
			new ReduceAction642(45),
			new ReduceAction641(45),
			new ReduceAction644(45),
			new ReduceAction645(45),
			new ReduceAction644(45),
			new ReduceAction647(45),
			new ReduceAction648(45),
			new ReduceAction649(45),
			new ReduceAction650(45),
			new ReduceAction649(45),
			new ReduceAction652(45),
			new ReduceAction653(45),
			new ReduceAction652(45),
			new ReduceAction655(45),
			new ReduceAction656(45),
			new ReduceAction657(45),
			new ReduceAction658(45),
			new ReduceAction659(45),
			new ReduceAction660(45),
			new ReduceAction661(45),
			new ReduceAction662(45),
			new ReduceAction661(45),
			new ReduceAction664(45),
			new ReduceAction665(45),
			new ReduceAction664(45),
			new ReduceAction667(45),
			new ReduceAction668(46),
			new ReduceAction669(47),
			new ReduceAction670(47),
			new ReduceAction671(48),
			new ReduceAction672(48),
			new ReduceAction673(48),
			new ReduceAction674(48),
			new ReduceAction675(48),
			new ReduceAction676(48),
			new ReduceAction677(48),
			new ReduceAction678(48),
			new ReduceAction679(48),
			new ReduceAction680(49),
			new ReduceAction681(49),
			new ReduceAction682(49),
			new ReduceAction683(49),
			new ReduceAction684(49),
			new ReduceAction685(49),
			new ReduceAction686(50),
			new ReduceAction687(50),
			new ReduceAction688(51),
			new ReduceAction689(52),
			new ReduceAction690(52),
			new ReduceAction691(52),
			new ReduceAction692(52),
			new ReduceAction693(52),
			new ReduceAction694(52),
			new ReduceAction695(52),
			new ReduceAction696(52),
			new ReduceAction697(53),
			new ReduceAction698(53),
			new ReduceAction699(53),
			new ReduceAction700(53),
			new ReduceAction699(53),
			new ReduceAction702(53),
			new ReduceAction703(53),
			new ReduceAction702(53),
			new ReduceAction705(53),
			new ReduceAction706(53),
			new ReduceAction707(53),
			new ReduceAction708(53),
			new ReduceAction707(53),
			new ReduceAction710(53),
			new ReduceAction711(53),
			new ReduceAction710(53),
			new ReduceAction713(53),
			new ReduceAction714(53),
			new ReduceAction715(53),
			new ReduceAction716(53),
			new ReduceAction717(53),
			new ReduceAction716(53),
			new ReduceAction719(53),
			new ReduceAction720(53),
			new ReduceAction719(53),
			new ReduceAction722(53),
			new ReduceAction723(53),
			new ReduceAction724(53),
			new ReduceAction725(53),
			new ReduceAction724(53),
			new ReduceAction727(53),
			new ReduceAction728(53),
			new ReduceAction727(53),
			new ReduceAction730(53),
			new ReduceAction731(54),
			new ReduceAction732(54),
			new ReduceAction733(55),
			new ReduceAction734(55),
			new ReduceAction735(56),
			new ReduceAction736(56),
			new ReduceAction737(56),
			new ReduceAction738(56),
			new ReduceAction739(56),
			new ReduceAction609(57),
			new ReduceAction611(57),
			new ReduceAction742(58),
			new ReduceAction743(58),
			new ReduceAction744(59),
			new ReduceAction745(59),
			new ReduceAction746(60),
			new ReduceAction747(60),
			new ReduceAction748(60),
			new ReduceAction749(60),
			new ReduceAction750(61),
			new ReduceAction751(61),
			new ReduceAction752(61),
			new ReduceAction753(61),
			new ReduceAction754(62),
			new ReduceAction612(63),
			new ReduceAction647(63),
			new ReduceAction648(63),
			new ReduceAction649(63),
			new ReduceAction650(63),
			new ReduceAction649(63),
			new ReduceAction652(63),
			new ReduceAction653(63),
			new ReduceAction652(63),
			new ReduceAction764(63),
			new ReduceAction612(64),
			new ReduceAction766(64),
			new ReduceAction612(65),
			new ReduceAction768(65),
			new ReduceAction769(65),
			new ReduceAction770(65),
			new ReduceAction771(65),
			new ReduceAction612(66),
			new ReduceAction773(66),
			new ReduceAction612(67),
			new ReduceAction775(67),
			new ReduceAction776(67),
			new ReduceAction777(67),
			new ReduceAction778(67),
			new ReduceAction779(67),
			new ReduceAction780(67),
			new ReduceAction781(67),
			new ReduceAction782(67),
			new ReduceAction783(67),
			new ReduceAction784(67),
			new ReduceAction785(67),
			new ReduceAction612(68),
			new ReduceAction787(68),
			new ReduceAction788(68),
			new ReduceAction612(69),
			new ReduceAction790(69),
			new ReduceAction791(69),
			new ReduceAction792(69),
			new ReduceAction612(70),
			new ReduceAction794(70),
			new ReduceAction795(70),
			new ReduceAction612(71),
			new ReduceAction797(71),
			new ReduceAction798(71),
			new ReduceAction799(71),
			new ReduceAction800(71),
			new ReduceAction801(71),
			new ReduceAction800(71),
			new ReduceAction803(71),
			new ReduceAction804(71),
			new ReduceAction803(71),
			new ReduceAction806(72),
			new ReduceAction807(72),
			new ReduceAction808(72),
			new ReduceAction809(72),
			new ReduceAction808(72),
			new ReduceAction811(72),
			new ReduceAction812(72),
			new ReduceAction811(72),
			new ReduceAction639(72),
			new ReduceAction640(72),
			new ReduceAction641(72),
			new ReduceAction642(72),
			new ReduceAction641(72),
			new ReduceAction644(72),
			new ReduceAction645(72),
			new ReduceAction644(72),
			new ReduceAction655(72),
			new ReduceAction656(72),
			new ReduceAction657(72),
			new ReduceAction658(72),
			new ReduceAction659(72),
			new ReduceAction660(72),
			new ReduceAction828(72),
			new ReduceAction829(72),
			new ReduceAction830(72),
			new ReduceAction831(72),
			new ReduceAction830(72),
			new ReduceAction833(72),
			new ReduceAction834(72),
			new ReduceAction835(72),
			new ReduceAction836(72),
			new ReduceAction837(72),
			new ReduceAction838(72),
			new ReduceAction839(72),
			new ReduceAction840(72),
			new ReduceAction841(72),
			new ReduceAction842(72),
			new ReduceAction843(72),
			new ReduceAction844(72),
			new ReduceAction845(72),
			new ReduceAction846(72),
			new ReduceAction847(72),
			new ReduceAction848(72),
			new ReduceAction849(72),
			new ReduceAction850(72),
			new ReduceAction851(72),
			new ReduceAction852(72),
			new ReduceAction853(72),
			new ReduceAction854(72),
			new ReduceAction612(72),
			new ReduceAction856(72),
			new ReduceAction857(72),
			new ReduceAction858(72),
			new ReduceAction859(72),
			new ReduceAction860(73),
			new ReduceAction861(73),
			new ReduceAction862(73),
			new ReduceAction863(73),
			new ReduceAction864(74),
			new ReduceAction865(75),
			new ReduceAction864(76),
			new ReduceAction867(77),
			new ReduceAction868(78),
			new ReduceAction869(79),
			new ReduceAction870(79),
			new ReduceAction871(80),
			new ReduceAction872(80),
			new ReduceAction873(80),
			new ReduceAction874(80),
			new ReduceAction875(81),
			new ReduceAction876(82),
			new ReduceAction877(82),
			new ReduceAction875(83),
			new ReduceAction879(84),
			new ReduceAction880(84),
			new ReduceAction881(84),
			new ReduceAction882(84),
			new ReduceAction883(84),
			new ReduceAction884(85),
			new ReduceAction885(86),
			new ReduceAction886(86),
			new ReduceAction887(87),
			new ReduceAction888(88),
			new ReduceAction889(88),
			new ReduceAction889(88),
			new ReduceAction891(88),
			new ReduceAction892(89),
			new ReduceAction893(89),
			new ReduceAction894(89),
			new ReduceAction893(89),
			new ReduceAction896(89),
			new ReduceAction897(89),
			new ReduceAction898(89),
			new ReduceAction897(89),
			new ReduceAction900(89),
			new ReduceAction901(89),
			new ReduceAction902(89),
			new ReduceAction901(89),
			new ReduceAction904(89),
			new ReduceAction905(89),
			new ReduceAction906(89),
			new ReduceAction905(89),
			new ReduceAction908(90),
			new ReduceAction909(90),
			new ReduceAction910(90),
			new ReduceAction908(91),
			new ReduceAction912(91),
			new ReduceAction909(91),
			new ReduceAction910(91),
			new ReduceAction915(92),
			new ReduceAction916(93),
			new ReduceAction917(93),
			new ReduceAction918(94),
			new ReduceAction919(95),
			new ReduceAction920(95),
			new ReduceAction921(96),
			new ReduceAction922(96),
			new ReduceAction923(96),
			new ReduceAction924(96),
			new ReduceAction925(97),
			new ReduceAction926(98),
			new ReduceAction927(99),
			new ReduceAction927(99),
			new ReduceAction929(100),
			new ReduceAction930(100),
			new ReduceAction70(100),
			new ReduceAction932(101),
			new ReduceAction933(101),
			new ReduceAction934(102),
			new ReduceAction935(102),
			new ReduceAction927(102),
			new ReduceAction345(103),
			new ReduceAction346(104),
			new ReduceAction347(104),
			new ReduceAction348(104),
			new ReduceAction349(104),
			new ReduceAction350(104),
			new ReduceAction351(104),
			new ReduceAction352(104),
			new ReduceAction353(104),
			new ReduceAction354(104),
			new ReduceAction355(104),
			new ReduceAction356(104),
			new ReduceAction357(104),
			new ReduceAction362(104),
			new ReduceAction363(104),
			new ReduceAction364(104),
			new ReduceAction365(104),
			new ReduceAction366(104),
			new ReduceAction367(104),
			new ReduceAction368(104),
			new ReduceAction369(104),
			new ReduceAction370(104),
			new ReduceAction371(104),
			new ReduceAction372(104),
			new ReduceAction373(104),
			new ReduceAction374(104),
			new ReduceAction375(104),
			new ReduceAction376(104),
			new ReduceAction377(104),
			new ReduceAction378(104),
			new ReduceAction379(104),
			new ReduceAction380(104),
			new ReduceAction381(104),
			new ReduceAction546(105),
			new ReduceAction547(105),
			new ReduceAction548(105),
			new ReduceAction549(105),
			new ReduceAction554(105),
			new ReduceAction555(105),
			new ReduceAction597(106),
			new ReduceAction598(106),
			new ReduceAction599(106),
			new ReduceAction600(106),
			new ReduceAction612(107),
			new ReduceAction647(107),
			new ReduceAction648(107),
			new ReduceAction649(107),
			new ReduceAction652(107),
			new ReduceAction650(107),
			new ReduceAction653(107),
			new ReduceAction649(107),
			new ReduceAction652(107),
			new ReduceAction612(108),
			new ReduceAction766(108),
			new ReduceAction612(109),
			new ReduceAction768(109),
			new ReduceAction769(109),
			new ReduceAction770(109),
			new ReduceAction771(109),
			new ReduceAction612(110),
			new ReduceAction773(110),
			new ReduceAction612(111),
			new ReduceAction775(111),
			new ReduceAction776(111),
			new ReduceAction777(111),
			new ReduceAction778(111),
			new ReduceAction779(111),
			new ReduceAction780(111),
			new ReduceAction781(111),
			new ReduceAction782(111),
			new ReduceAction783(111),
			new ReduceAction784(111),
			new ReduceAction785(111),
			new ReduceAction612(112),
			new ReduceAction787(112),
			new ReduceAction788(112),
			new ReduceAction612(113),
			new ReduceAction790(113),
			new ReduceAction791(113),
			new ReduceAction792(113),
			new ReduceAction612(114),
			new ReduceAction794(114),
			new ReduceAction795(114),
			new ReduceAction612(115),
			new ReduceAction797(115),
			new ReduceAction798(115),
			new ReduceAction799(115),
			new ReduceAction800(115),
			new ReduceAction803(115),
			new ReduceAction801(115),
			new ReduceAction804(115),
			new ReduceAction800(115),
			new ReduceAction803(115),
			new ReduceAction806(116),
			new ReduceAction807(116),
			new ReduceAction808(116),
			new ReduceAction811(116),
			new ReduceAction809(116),
			new ReduceAction812(116),
			new ReduceAction808(116),
			new ReduceAction811(116),
			new ReduceAction639(116),
			new ReduceAction640(116),
			new ReduceAction641(116),
			new ReduceAction644(116),
			new ReduceAction642(116),
			new ReduceAction645(116),
			new ReduceAction641(116),
			new ReduceAction644(116),
			new ReduceAction655(116),
			new ReduceAction656(116),
			new ReduceAction657(116),
			new ReduceAction658(116),
			new ReduceAction659(116),
			new ReduceAction660(116),
			new ReduceAction829(116),
			new ReduceAction830(116),
			new ReduceAction831(116),
			new ReduceAction830(116),
			new ReduceAction839(116),
			new ReduceAction840(116),
			new ReduceAction841(116),
			new ReduceAction842(116),
			new ReduceAction843(116),
			new ReduceAction844(116),
			new ReduceAction845(116),
			new ReduceAction846(116),
			new ReduceAction847(116),
			new ReduceAction848(116),
			new ReduceAction849(116),
			new ReduceAction850(116),
			new ReduceAction851(116),
			new ReduceAction852(116),
			new ReduceAction853(116),
			new ReduceAction854(116),
			new ReduceAction612(116),
			new ReduceAction856(116),
			new ReduceAction857(116),
			new ReduceAction858(116),
			new ReduceAction859(116),
			new ReduceAction597(117),
			new ReduceAction598(117),
			new ReduceAction599(117),
			new ReduceAction600(117),
			new ReduceAction601(117),
			new ReduceAction602(117),
			new ReduceAction603(117),
			new ReduceAction604(117),
			new ReduceAction612(118),
			new ReduceAction612(118),
			new ReduceAction622(118),
			new ReduceAction623(118),
			new ReduceAction624(118),
			new ReduceAction625(118),
			new ReduceAction626(118),
			new ReduceAction627(118),
			new ReduceAction628(118),
			new ReduceAction629(118),
			new ReduceAction630(118),
			new ReduceAction631(118),
			new ReduceAction632(118),
			new ReduceAction612(118),
			new ReduceAction612(118),
			new ReduceAction612(118),
			new ReduceAction612(118),
			new ReduceAction612(118),
			new ReduceAction612(118),
			new ReduceAction639(118),
			new ReduceAction640(118),
			new ReduceAction641(118),
			new ReduceAction642(118),
			new ReduceAction641(118),
			new ReduceAction644(118),
			new ReduceAction645(118),
			new ReduceAction644(118),
			new ReduceAction647(118),
			new ReduceAction648(118),
			new ReduceAction649(118),
			new ReduceAction650(118),
			new ReduceAction649(118),
			new ReduceAction652(118),
			new ReduceAction653(118),
			new ReduceAction652(118),
			new ReduceAction655(118),
			new ReduceAction656(118),
			new ReduceAction657(118),
			new ReduceAction658(118),
			new ReduceAction659(118),
			new ReduceAction660(118),
			new ReduceAction661(118),
			new ReduceAction662(118),
			new ReduceAction661(118),
			new ReduceAction664(118),
			new ReduceAction665(118),
			new ReduceAction664(118),
			new ReduceAction667(118),
			new ReduceAction697(119),
			new ReduceAction698(119),
			new ReduceAction699(119),
			new ReduceAction700(119),
			new ReduceAction699(119),
			new ReduceAction702(119),
			new ReduceAction703(119),
			new ReduceAction702(119),
			new ReduceAction705(119),
			new ReduceAction706(119),
			new ReduceAction707(119),
			new ReduceAction708(119),
			new ReduceAction707(119),
			new ReduceAction710(119),
			new ReduceAction711(119),
			new ReduceAction710(119),
			new ReduceAction713(119),
			new ReduceAction714(119),
			new ReduceAction715(119),
			new ReduceAction716(119),
			new ReduceAction717(119),
			new ReduceAction716(119),
			new ReduceAction719(119),
			new ReduceAction720(119),
			new ReduceAction719(119),
			new ReduceAction722(119),
			new ReduceAction723(119),
			new ReduceAction724(119),
			new ReduceAction725(119),
			new ReduceAction724(119),
			new ReduceAction727(119),
			new ReduceAction728(119),
			new ReduceAction727(119),
			new ReduceAction730(119),
			new ReduceAction612(120),
			new ReduceAction647(120),
			new ReduceAction648(120),
			new ReduceAction649(120),
			new ReduceAction650(120),
			new ReduceAction649(120),
			new ReduceAction652(120),
			new ReduceAction653(120),
			new ReduceAction652(120),
			new ReduceAction612(121),
			new ReduceAction766(121),
			new ReduceAction612(122),
			new ReduceAction768(122),
			new ReduceAction769(122),
			new ReduceAction770(122),
			new ReduceAction771(122),
			new ReduceAction612(123),
			new ReduceAction773(123),
			new ReduceAction612(124),
			new ReduceAction775(124),
			new ReduceAction776(124),
			new ReduceAction777(124),
			new ReduceAction778(124),
			new ReduceAction779(124),
			new ReduceAction780(124),
			new ReduceAction781(124),
			new ReduceAction782(124),
			new ReduceAction783(124),
			new ReduceAction784(124),
			new ReduceAction785(124),
			new ReduceAction612(125),
			new ReduceAction787(125),
			new ReduceAction788(125),
			new ReduceAction612(126),
			new ReduceAction790(126),
			new ReduceAction791(126),
			new ReduceAction792(126),
			new ReduceAction612(127),
			new ReduceAction794(127),
			new ReduceAction795(127),
			new ReduceAction612(128),
			new ReduceAction797(128),
			new ReduceAction798(128),
			new ReduceAction799(128),
			new ReduceAction800(128),
			new ReduceAction801(128),
			new ReduceAction800(128),
			new ReduceAction803(128),
			new ReduceAction804(128),
			new ReduceAction803(128),
			new ReduceAction806(129),
			new ReduceAction807(129),
			new ReduceAction808(129),
			new ReduceAction809(129),
			new ReduceAction808(129),
			new ReduceAction811(129),
			new ReduceAction812(129),
			new ReduceAction811(129),
			new ReduceAction639(129),
			new ReduceAction640(129),
			new ReduceAction641(129),
			new ReduceAction642(129),
			new ReduceAction641(129),
			new ReduceAction644(129),
			new ReduceAction645(129),
			new ReduceAction644(129),
			new ReduceAction655(129),
			new ReduceAction656(129),
			new ReduceAction657(129),
			new ReduceAction658(129),
			new ReduceAction659(129),
			new ReduceAction660(129),
			new ReduceAction828(129),
			new ReduceAction829(129),
			new ReduceAction830(129),
			new ReduceAction831(129),
			new ReduceAction830(129),
			new ReduceAction839(129),
			new ReduceAction840(129),
			new ReduceAction841(129),
			new ReduceAction842(129),
			new ReduceAction843(129),
			new ReduceAction844(129),
			new ReduceAction845(129),
			new ReduceAction846(129),
			new ReduceAction847(129),
			new ReduceAction848(129),
			new ReduceAction849(129),
			new ReduceAction850(129),
			new ReduceAction851(129),
			new ReduceAction852(129),
			new ReduceAction853(129),
			new ReduceAction854(129),
			new ReduceAction612(129),
			new ReduceAction858(129),
			new ReduceAction859(129),
			new ReduceAction869(130),
			new ReduceAction870(130),
			new ReduceAction871(131),
			new ReduceAction872(131),
			new ReduceAction885(132),
			new ReduceAction886(132),
			new ReduceAction888(133),
			new ReduceAction889(133),
			new ReduceAction889(133),
			new ReduceAction597(134),
			new ReduceAction598(134),
			new ReduceAction599(134),
			new ReduceAction600(134),
			new ReduceAction612(135),
			new ReduceAction647(135),
			new ReduceAction648(135),
			new ReduceAction649(135),
			new ReduceAction652(135),
			new ReduceAction650(135),
			new ReduceAction653(135),
			new ReduceAction649(135),
			new ReduceAction652(135),
			new ReduceAction612(136),
			new ReduceAction766(136),
			new ReduceAction612(137),
			new ReduceAction768(137),
			new ReduceAction769(137),
			new ReduceAction770(137),
			new ReduceAction771(137),
			new ReduceAction612(138),
			new ReduceAction773(138),
			new ReduceAction612(139),
			new ReduceAction775(139),
			new ReduceAction776(139),
			new ReduceAction777(139),
			new ReduceAction778(139),
			new ReduceAction779(139),
			new ReduceAction780(139),
			new ReduceAction781(139),
			new ReduceAction782(139),
			new ReduceAction783(139),
			new ReduceAction784(139),
			new ReduceAction785(139),
			new ReduceAction612(140),
			new ReduceAction787(140),
			new ReduceAction788(140),
			new ReduceAction612(141),
			new ReduceAction790(141),
			new ReduceAction791(141),
			new ReduceAction792(141),
			new ReduceAction612(142),
			new ReduceAction794(142),
			new ReduceAction795(142),
			new ReduceAction612(143),
			new ReduceAction797(143),
			new ReduceAction1318(143),
			new ReduceAction1319(143),
			new ReduceAction798(143),
			new ReduceAction1319(143),
			new ReduceAction1322(144),
			new ReduceAction1323(144),
			new ReduceAction806(144),
			new ReduceAction1323(144),
			new ReduceAction1326(144),
			new ReduceAction1327(144),
			new ReduceAction639(144),
			new ReduceAction1327(144),
			new ReduceAction655(144),
			new ReduceAction656(144),
			new ReduceAction657(144),
			new ReduceAction658(144),
			new ReduceAction1334(144),
			new ReduceAction829(144),
			new ReduceAction830(144),
			new ReduceAction831(144),
			new ReduceAction830(144),
			new ReduceAction839(144),
			new ReduceAction840(144),
			new ReduceAction841(144),
			new ReduceAction842(144),
			new ReduceAction843(144),
			new ReduceAction844(144),
			new ReduceAction845(144),
			new ReduceAction846(144),
			new ReduceAction847(144),
			new ReduceAction848(144),
			new ReduceAction849(144),
			new ReduceAction850(144),
			new ReduceAction851(144),
			new ReduceAction852(144),
			new ReduceAction853(144),
			new ReduceAction854(144),
			new ReduceAction612(144),
			new ReduceAction858(144),
			new ReduceAction859(144),
			new ReduceAction1358(145),
			new ReduceAction1359(145),
			new ReduceAction609(146),
			new ReduceAction610(146),
			new ReduceAction611(146),
			new ReduceAction612(146),
			new ReduceAction612(147),
			new ReduceAction612(147),
			new ReduceAction622(147),
			new ReduceAction623(147),
			new ReduceAction624(147),
			new ReduceAction625(147),
			new ReduceAction626(147),
			new ReduceAction627(147),
			new ReduceAction628(147),
			new ReduceAction629(147),
			new ReduceAction630(147),
			new ReduceAction631(147),
			new ReduceAction632(147),
			new ReduceAction612(147),
			new ReduceAction612(147),
			new ReduceAction612(147),
			new ReduceAction612(147),
			new ReduceAction612(147),
			new ReduceAction612(147),
			new ReduceAction639(147),
			new ReduceAction640(147),
			new ReduceAction641(147),
			new ReduceAction642(147),
			new ReduceAction641(147),
			new ReduceAction644(147),
			new ReduceAction645(147),
			new ReduceAction644(147),
			new ReduceAction647(147),
			new ReduceAction648(147),
			new ReduceAction649(147),
			new ReduceAction650(147),
			new ReduceAction649(147),
			new ReduceAction652(147),
			new ReduceAction653(147),
			new ReduceAction652(147),
			new ReduceAction655(147),
			new ReduceAction656(147),
			new ReduceAction657(147),
			new ReduceAction658(147),
			new ReduceAction659(147),
			new ReduceAction660(147),
			new ReduceAction661(147),
			new ReduceAction662(147),
			new ReduceAction661(147),
			new ReduceAction664(147),
			new ReduceAction665(147),
			new ReduceAction664(147),
			new ReduceAction667(147),
			new ReduceAction669(148),
			new ReduceAction670(148),
			new ReduceAction671(149),
			new ReduceAction672(149),
			new ReduceAction673(149),
			new ReduceAction674(149),
			new ReduceAction675(149),
			new ReduceAction676(149),
			new ReduceAction677(149),
			new ReduceAction678(149),
			new ReduceAction679(149),
			new ReduceAction688(150),
			new ReduceAction689(151),
			new ReduceAction690(151),
			new ReduceAction691(151),
			new ReduceAction692(151),
			new ReduceAction693(151),
			new ReduceAction694(151),
			new ReduceAction695(151),
			new ReduceAction696(151),
			new ReduceAction697(152),
			new ReduceAction698(152),
			new ReduceAction699(152),
			new ReduceAction700(152),
			new ReduceAction699(152),
			new ReduceAction702(152),
			new ReduceAction703(152),
			new ReduceAction702(152),
			new ReduceAction705(152),
			new ReduceAction706(152),
			new ReduceAction707(152),
			new ReduceAction708(152),
			new ReduceAction707(152),
			new ReduceAction710(152),
			new ReduceAction711(152),
			new ReduceAction710(152),
			new ReduceAction713(152),
			new ReduceAction714(152),
			new ReduceAction715(152),
			new ReduceAction716(152),
			new ReduceAction717(152),
			new ReduceAction716(152),
			new ReduceAction719(152),
			new ReduceAction720(152),
			new ReduceAction719(152),
			new ReduceAction722(152),
			new ReduceAction723(152),
			new ReduceAction724(152),
			new ReduceAction725(152),
			new ReduceAction724(152),
			new ReduceAction727(152),
			new ReduceAction728(152),
			new ReduceAction727(152),
			new ReduceAction730(152),
			new ReduceAction733(153),
			new ReduceAction734(153),
			new ReduceAction735(154),
			new ReduceAction742(155),
			new ReduceAction743(155),
			new ReduceAction744(156),
			new ReduceAction745(156),
			new ReduceAction746(157),
			new ReduceAction747(157),
			new ReduceAction748(157),
			new ReduceAction749(157),
			new ReduceAction750(158),
			new ReduceAction751(158),
			new ReduceAction612(159),
			new ReduceAction647(159),
			new ReduceAction648(159),
			new ReduceAction649(159),
			new ReduceAction650(159),
			new ReduceAction649(159),
			new ReduceAction652(159),
			new ReduceAction653(159),
			new ReduceAction652(159),
			new ReduceAction764(159),
			new ReduceAction612(160),
			new ReduceAction647(160),
			new ReduceAction648(160),
			new ReduceAction649(160),
			new ReduceAction652(160),
			new ReduceAction650(160),
			new ReduceAction653(160),
			new ReduceAction649(160),
			new ReduceAction652(160),
			new ReduceAction612(161),
			new ReduceAction612(161),
			new ReduceAction622(161),
			new ReduceAction623(161),
			new ReduceAction624(161),
			new ReduceAction625(161),
			new ReduceAction626(161),
			new ReduceAction627(161),
			new ReduceAction628(161),
			new ReduceAction629(161),
			new ReduceAction630(161),
			new ReduceAction631(161),
			new ReduceAction632(161),
			new ReduceAction612(161),
			new ReduceAction612(161),
			new ReduceAction612(161),
			new ReduceAction612(161),
			new ReduceAction612(161),
			new ReduceAction612(161),
			new ReduceAction639(161),
			new ReduceAction640(161),
			new ReduceAction641(161),
			new ReduceAction642(161),
			new ReduceAction641(161),
			new ReduceAction644(161),
			new ReduceAction645(161),
			new ReduceAction644(161),
			new ReduceAction647(161),
			new ReduceAction648(161),
			new ReduceAction649(161),
			new ReduceAction650(161),
			new ReduceAction649(161),
			new ReduceAction652(161),
			new ReduceAction653(161),
			new ReduceAction652(161),
			new ReduceAction655(161),
			new ReduceAction656(161),
			new ReduceAction657(161),
			new ReduceAction658(161),
			new ReduceAction659(161),
			new ReduceAction660(161),
			new ReduceAction661(161),
			new ReduceAction662(161),
			new ReduceAction661(161),
			new ReduceAction664(161),
			new ReduceAction665(161),
			new ReduceAction664(161),
			new ReduceAction667(161),
			new ReduceAction697(162),
			new ReduceAction698(162),
			new ReduceAction699(162),
			new ReduceAction700(162),
			new ReduceAction699(162),
			new ReduceAction702(162),
			new ReduceAction703(162),
			new ReduceAction702(162),
			new ReduceAction705(162),
			new ReduceAction706(162),
			new ReduceAction707(162),
			new ReduceAction708(162),
			new ReduceAction707(162),
			new ReduceAction710(162),
			new ReduceAction711(162),
			new ReduceAction710(162),
			new ReduceAction713(162),
			new ReduceAction714(162),
			new ReduceAction715(162),
			new ReduceAction716(162),
			new ReduceAction717(162),
			new ReduceAction716(162),
			new ReduceAction719(162),
			new ReduceAction720(162),
			new ReduceAction719(162),
			new ReduceAction722(162),
			new ReduceAction723(162),
			new ReduceAction724(162),
			new ReduceAction725(162),
			new ReduceAction724(162),
			new ReduceAction727(162),
			new ReduceAction728(162),
			new ReduceAction727(162),
			new ReduceAction730(162),
			new ReduceAction612(163),
			new ReduceAction647(163),
			new ReduceAction648(163),
			new ReduceAction649(163),
			new ReduceAction650(163),
			new ReduceAction649(163),
			new ReduceAction652(163),
			new ReduceAction653(163),
			new ReduceAction652(163),
			new ReduceAction612(164),
			new ReduceAction647(164),
			new ReduceAction648(164),
			new ReduceAction649(164),
			new ReduceAction652(164),
			new ReduceAction650(164),
			new ReduceAction653(164),
			new ReduceAction649(164),
			new ReduceAction652(164),
			new ReduceAction609(165),
			new ReduceAction610(165),
			new ReduceAction611(165),
			new ReduceAction609(166),
			new ReduceAction610(166),
			new ReduceAction611(166),
			new ReduceAction612(167),
			new ReduceAction612(167),
			new ReduceAction622(167),
			new ReduceAction623(167),
			new ReduceAction624(167),
			new ReduceAction625(167),
			new ReduceAction626(167),
			new ReduceAction627(167),
			new ReduceAction628(167),
			new ReduceAction629(167),
			new ReduceAction630(167),
			new ReduceAction631(167),
			new ReduceAction632(167),
			new ReduceAction612(167),
			new ReduceAction612(167),
			new ReduceAction612(167),
			new ReduceAction612(167),
			new ReduceAction612(167),
			new ReduceAction667(167),
			new ReduceAction612(168),
			new ReduceAction612(168),
			new ReduceAction622(168),
			new ReduceAction623(168),
			new ReduceAction624(168),
			new ReduceAction625(168),
			new ReduceAction626(168),
			new ReduceAction627(168),
			new ReduceAction628(168),
			new ReduceAction629(168),
			new ReduceAction630(168),
			new ReduceAction631(168),
			new ReduceAction632(168),
			new ReduceAction612(168),
			new ReduceAction612(168),
			new ReduceAction612(168),
			new ReduceAction612(168),
			new ReduceAction612(168),
			new ReduceAction667(168),
			new ReduceAction612(169),
			new ReduceAction612(169),
			new ReduceAction622(169),
			new ReduceAction623(169),
			new ReduceAction624(169),
			new ReduceAction625(169),
			new ReduceAction626(169),
			new ReduceAction627(169),
			new ReduceAction628(169),
			new ReduceAction629(169),
			new ReduceAction630(169),
			new ReduceAction631(169),
			new ReduceAction632(169),
			new ReduceAction612(169),
			new ReduceAction612(169),
			new ReduceAction612(169),
			new ReduceAction612(169),
			new ReduceAction612(169),
			new ReduceAction667(169),
			new ReduceAction612(170),
			new ReduceAction612(170),
			new ReduceAction622(170),
			new ReduceAction623(170),
			new ReduceAction624(170),
			new ReduceAction625(170),
			new ReduceAction626(170),
			new ReduceAction627(170),
			new ReduceAction628(170),
			new ReduceAction629(170),
			new ReduceAction630(170),
			new ReduceAction631(170),
			new ReduceAction632(170),
			new ReduceAction612(170),
			new ReduceAction612(170),
			new ReduceAction612(170),
			new ReduceAction612(170),
			new ReduceAction612(170),
			new ReduceAction667(170),
			new ReduceAction612(171),
			new ReduceAction766(171),
			new ReduceAction612(172),
			new ReduceAction768(172),
			new ReduceAction769(172),
			new ReduceAction770(172),
			new ReduceAction771(172),
			new ReduceAction612(173),
			new ReduceAction773(173),
			new ReduceAction612(174),
			new ReduceAction775(174),
			new ReduceAction777(174),
			new ReduceAction778(174),
			new ReduceAction779(174),
			new ReduceAction780(174),
			new ReduceAction781(174),
			new ReduceAction782(174),
			new ReduceAction783(174),
			new ReduceAction784(174),
			new ReduceAction785(174),
			new ReduceAction612(175),
			new ReduceAction766(175),
			new ReduceAction612(176),
			new ReduceAction768(176),
			new ReduceAction769(176),
			new ReduceAction770(176),
			new ReduceAction771(176),
			new ReduceAction612(177),
			new ReduceAction773(177),
			new ReduceAction612(178),
			new ReduceAction775(178),
			new ReduceAction777(178),
			new ReduceAction778(178),
			new ReduceAction779(178),
			new ReduceAction780(178),
			new ReduceAction781(178),
			new ReduceAction782(178),
			new ReduceAction783(178),
			new ReduceAction784(178),
			new ReduceAction785(178),
			new ReduceAction612(179),
			new ReduceAction766(179),
			new ReduceAction612(180),
			new ReduceAction768(180),
			new ReduceAction769(180),
			new ReduceAction770(180),
			new ReduceAction771(180),
			new ReduceAction612(181),
			new ReduceAction773(181),
			new ReduceAction612(182),
			new ReduceAction775(182),
			new ReduceAction777(182),
			new ReduceAction778(182),
			new ReduceAction779(182),
			new ReduceAction780(182),
			new ReduceAction781(182),
			new ReduceAction782(182),
			new ReduceAction783(182),
			new ReduceAction784(182),
			new ReduceAction785(182),
			new ReduceAction612(183),
			new ReduceAction766(183),
			new ReduceAction612(184),
			new ReduceAction768(184),
			new ReduceAction769(184),
			new ReduceAction770(184),
			new ReduceAction771(184),
			new ReduceAction612(185),
			new ReduceAction773(185),
			new ReduceAction612(186),
			new ReduceAction775(186),
			new ReduceAction777(186),
			new ReduceAction778(186),
			new ReduceAction779(186),
			new ReduceAction780(186),
			new ReduceAction781(186),
			new ReduceAction782(186),
			new ReduceAction783(186),
			new ReduceAction784(186),
			new ReduceAction785(186),
			new ReduceAction879(187),
			new ReduceAction880(187),
			new ReduceAction881(187),
			new ReduceAction882(187),
			new ReduceAction883(187),
			new ReduceAction892(188),
			new ReduceAction893(188),
			new ReduceAction894(188),
			new ReduceAction893(188),
			new ReduceAction904(188),
			new ReduceAction905(188),
			new ReduceAction906(188),
			new ReduceAction905(188),
			new ReduceAction1773(189),
			new ReduceAction1774(189),
			new ReduceAction1775(190),
			new ReduceAction1776(190),
			new ReduceAction1777(191),
			new ReduceAction1778(191),
			new ReduceAction1779(192),
			new ReduceAction1780(192),
			new ReduceAction1781(193),
			new ReduceAction1782(193),
			new ReduceAction1779(194),
			new ReduceAction1780(194),
			new ReduceAction1785(195),
			new ReduceAction1786(195),
			new ReduceAction1787(196),
			new ReduceAction1788(196),
			new ReduceAction1789(197),
			new ReduceAction1790(197),
			new ReduceAction1791(198),
			new ReduceAction1792(198),
			new ReduceAction605(199),
			new ReduceAction1794(199),
			new ReduceAction1795(200),
			new ReduceAction1796(200),
			new ReduceAction573(201),
			new ReduceAction1798(201),
			new ReduceAction876(202),
			new ReduceAction1800(202),
			new ReduceAction876(203),
			new ReduceAction1800(203),
			new ReduceAction885(204),
			new ReduceAction1804(204),
			new ReduceAction1795(205),
			new ReduceAction1796(205),
			new ReduceAction919(206),
			new ReduceAction1808(206),
			new ReduceAction1809(207),
			new ReduceAction1810(207),
			new ReduceAction1811(208),
			new ReduceAction1812(208),
			new ReduceAction876(209),
			new ReduceAction1800(209)
		)
	end
end

redef class Prod
	# Location on the first token after the start of a production
	# So outside the production for epilon production
	var _first_location: nullable Location
end

# Find location of production nodes
# Uses existing token locations to infer location of productions.
private class ComputeProdLocationVisitor
	super Visitor
	# Currenlty visited productions that need a first token
	var _need_first_prods: Array[Prod] = new Array[Prod]

	# Already visited epsilon productions that waits something after them
	var _need_after_epsilons: Array[Prod] = new Array[Prod]

	# Location of the last visited token in the current production
	var _last_location: nullable Location = null

	redef fun visit(n: ANode)
	do
		if n isa Token then
			var loc = n.location
			_last_location = loc

			# Add a first token to productions that need one
			if not _need_first_prods.is_empty then
				for no in _need_first_prods do
					no._first_location = loc
				end
				_need_first_prods.clear
			end

			# Find location for already visited epsilon production that need one
			if not _need_after_epsilons.is_empty then
				var loco = new Location(loc.file, loc.line_start, loc.line_start, loc.column_start, loc.column_start) 
				for no in _need_after_epsilons do
					no.location = loco
				end
				_need_after_epsilons.clear
			end
		else
			assert n isa Prod
			_need_first_prods.add(n)

			n.visit_all(self)

			var startl = n._first_location
			if startl != null then
				# Non-epsilon production
				var endl = _last_location
				assert endl != null

				n.location = new Location(startl.file, startl.line_start, endl.line_end, startl.column_start, endl.column_end)

				if not _need_after_epsilons.is_empty then
					var loc = new Location(endl.file, endl.line_end, endl.line_end, endl.column_end, endl.column_end)
					for no in _need_after_epsilons do
						# Epsilon production that finishes the current non-epsilon production
						no.location = loc
					end
					_need_after_epsilons.clear
				end
			else
				# Epsilon production in the middle or that finishes a parent non-epsilon production
				_need_after_epsilons.add(n)
			end
		end
	end

	init do end
end

# Each reduca action has its own class, this one is the root of the hierarchy.
private abstract class ReduceAction
	fun action(p: Parser) is abstract
	fun concat(l1, l2 : Array[Object]): Array[Object]
	do
		if l1.is_empty then return l2
		l1.append(l2)
		return l1
	end
	var _goto: Int
	init(g: Int) do _goto = g
end

private class ReduceAction0
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode5
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode5
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction2
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction3
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode6 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction4
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction5
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode6 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction6
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction7
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction8
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction9
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction10
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction11
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction12
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction13
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction14
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode8 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction15
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode8 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist4
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction16
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode8 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist1
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pclassdefnode5: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode7
					)
					if pclassdefnode5 != null then
						listnode8.add(pclassdefnode5)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction17
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode8 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pclassdefnode5: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode7
					)
					if pclassdefnode5 != null then
						listnode8.add(pclassdefnode5)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction18
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode9 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist2
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					if pclassdefnode6 != null then
						listnode9.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction19
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode9 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					if pclassdefnode6 != null then
						listnode9.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction20
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode9 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist2
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					if pclassdefnode6 != null then
						listnode9.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction21
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode9 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					if pclassdefnode6 != null then
						listnode9.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction22
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist3
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					if pclassdefnode7 != null then
						listnode10.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction23
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode10 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist4
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					if pclassdefnode7 != null then
						listnode10.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction24
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode9 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist2
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					listnode9 = concat(listnode9, listnode5)
					if pclassdefnode6 != null then
						listnode9.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction25
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode9 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					listnode9 = concat(listnode9, listnode5)
					if pclassdefnode6 != null then
						listnode9.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction26
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist3
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					listnode10 = concat(listnode10, listnode6)
					if pclassdefnode7 != null then
						listnode10.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction27
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode10 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist4
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					listnode10 = concat(listnode10, listnode6)
					if pclassdefnode7 != null then
						listnode10.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction28
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist3
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					listnode10 = concat(listnode10, listnode6)
					if pclassdefnode7 != null then
						listnode10.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction29
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode10 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist4
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					listnode10 = concat(listnode10, listnode6)
					if pclassdefnode7 != null then
						listnode10.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction30
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					var listnode10 = new Array[Object]
					var listnode9 = nodearraylist4
					assert listnode9 isa Array[Object]
					listnode10 = concat(listnode10, listnode9)
					var pclassdefnode8: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode10
					)
					listnode11 = concat(listnode11, listnode7)
					if pclassdefnode8 != null then
						listnode11.add(pclassdefnode8)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode11
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction31
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode11 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist4
					assert listnode7 isa Array[Object]
					var listnode10 = new Array[Object]
					var listnode9 = nodearraylist5
					assert listnode9 isa Array[Object]
					listnode10 = concat(listnode10, listnode9)
					var pclassdefnode8: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode10
					)
					listnode11 = concat(listnode11, listnode7)
					if pclassdefnode8 != null then
						listnode11.add(pclassdefnode8)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode11
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction32
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var pclassdefnode5 = nodearraylist1
					assert pclassdefnode5 isa nullable AClassdef
					if pclassdefnode5 != null then
						listnode6.add(pclassdefnode5)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction33
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var pclassdefnode5 = nodearraylist2
					assert pclassdefnode5 isa nullable AClassdef
					if pclassdefnode5 != null then
						listnode6.add(pclassdefnode5)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode6
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction34
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pclassdefnode6 = nodearraylist2
					assert pclassdefnode6 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction35
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pclassdefnode6 = nodearraylist3
					assert pclassdefnode6 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction36
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pclassdefnode6 = nodearraylist2
					assert pclassdefnode6 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction37
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pclassdefnode6 = nodearraylist3
					assert pclassdefnode6 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction38
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode8 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pclassdefnode7 = nodearraylist3
					assert pclassdefnode7 isa nullable AClassdef
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction39
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode8 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pclassdefnode7 = nodearraylist4
					assert pclassdefnode7 isa nullable AClassdef
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction40
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					var pclassdefnode6 = nodearraylist2
					assert pclassdefnode6 isa nullable AClassdef
					listnode7 = concat(listnode7, listnode5)
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction41
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode7 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					var pclassdefnode6 = nodearraylist3
					assert pclassdefnode6 isa nullable AClassdef
					listnode7 = concat(listnode7, listnode5)
					if pclassdefnode6 != null then
						listnode7.add(pclassdefnode6)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode7
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction42
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode8 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					var pclassdefnode7 = nodearraylist3
					assert pclassdefnode7 isa nullable AClassdef
					listnode8 = concat(listnode8, listnode6)
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction43
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode8 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					var pclassdefnode7 = nodearraylist4
					assert pclassdefnode7 isa nullable AClassdef
					listnode8 = concat(listnode8, listnode6)
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction44
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode8 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					var pclassdefnode7 = nodearraylist3
					assert pclassdefnode7 isa nullable AClassdef
					listnode8 = concat(listnode8, listnode6)
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction45
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode8 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					var pclassdefnode7 = nodearraylist4
					assert pclassdefnode7 isa nullable AClassdef
					listnode8 = concat(listnode8, listnode6)
					if pclassdefnode7 != null then
						listnode8.add(pclassdefnode7)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode8
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction46
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode9 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					var pclassdefnode8 = nodearraylist4
					assert pclassdefnode8 isa nullable AClassdef
					listnode9 = concat(listnode9, listnode7)
					if pclassdefnode8 != null then
						listnode9.add(pclassdefnode8)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction47
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode9 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist4
					assert listnode7 isa Array[Object]
					var pclassdefnode8 = nodearraylist5
					assert pclassdefnode8 isa nullable AClassdef
					listnode9 = concat(listnode9, listnode7)
					if pclassdefnode8 != null then
						listnode9.add(pclassdefnode8)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction48
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode9 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist1
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pclassdefnode5: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode7
					)
					var pclassdefnode8 = nodearraylist2
					assert pclassdefnode8 isa nullable AClassdef
					if pclassdefnode5 != null then
						listnode9.add(pclassdefnode5)
					end
					if pclassdefnode8 != null then
						listnode9.add(pclassdefnode8)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction49
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode9 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var pclassdefnode5: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode7
					)
					var pclassdefnode8 = nodearraylist3
					assert pclassdefnode8 isa nullable AClassdef
					if pclassdefnode5 != null then
						listnode9.add(pclassdefnode5)
					end
					if pclassdefnode8 != null then
						listnode9.add(pclassdefnode8)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode9
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction50
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist2
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					var pclassdefnode9 = nodearraylist3
					assert pclassdefnode9 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode10.add(pclassdefnode6)
					end
					if pclassdefnode9 != null then
						listnode10.add(pclassdefnode9)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction51
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode10 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					var pclassdefnode9 = nodearraylist4
					assert pclassdefnode9 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode10.add(pclassdefnode6)
					end
					if pclassdefnode9 != null then
						listnode10.add(pclassdefnode9)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction52
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist2
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					var pclassdefnode9 = nodearraylist3
					assert pclassdefnode9 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode10.add(pclassdefnode6)
					end
					if pclassdefnode9 != null then
						listnode10.add(pclassdefnode9)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction53
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode10 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					var pclassdefnode9 = nodearraylist4
					assert pclassdefnode9 isa nullable AClassdef
					if pclassdefnode6 != null then
						listnode10.add(pclassdefnode6)
					end
					if pclassdefnode9 != null then
						listnode10.add(pclassdefnode9)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction54
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist3
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					var pclassdefnode10 = nodearraylist4
					assert pclassdefnode10 isa nullable AClassdef
					if pclassdefnode7 != null then
						listnode11.add(pclassdefnode7)
					end
					if pclassdefnode10 != null then
						listnode11.add(pclassdefnode10)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode11
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction55
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode11 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist4
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					var pclassdefnode10 = nodearraylist5
					assert pclassdefnode10 isa nullable AClassdef
					if pclassdefnode7 != null then
						listnode11.add(pclassdefnode7)
					end
					if pclassdefnode10 != null then
						listnode11.add(pclassdefnode10)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode11
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction56
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode5 = nodearraylist1
					assert listnode5 isa Array[Object]
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist2
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					var pclassdefnode9 = nodearraylist3
					assert pclassdefnode9 isa nullable AClassdef
					listnode10 = concat(listnode10, listnode5)
					if pclassdefnode6 != null then
						listnode10.add(pclassdefnode6)
					end
					if pclassdefnode9 != null then
						listnode10.add(pclassdefnode9)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode4,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction57
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode4 = new Array[Object]
					var listnode10 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					var listnode8 = new Array[Object]
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pclassdefnode6: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode8
					)
					var pclassdefnode9 = nodearraylist4
					assert pclassdefnode9 isa nullable AClassdef
					listnode10 = concat(listnode10, listnode5)
					if pclassdefnode6 != null then
						listnode10.add(pclassdefnode6)
					end
					if pclassdefnode9 != null then
						listnode10.add(pclassdefnode9)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode4,
						listnode10
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction58
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist3
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					var pclassdefnode10 = nodearraylist4
					assert pclassdefnode10 isa nullable AClassdef
					listnode11 = concat(listnode11, listnode6)
					if pclassdefnode7 != null then
						listnode11.add(pclassdefnode7)
					end
					if pclassdefnode10 != null then
						listnode11.add(pclassdefnode10)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode5,
						listnode11
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction59
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode11 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist4
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					var pclassdefnode10 = nodearraylist5
					assert pclassdefnode10 isa nullable AClassdef
					listnode11 = concat(listnode11, listnode6)
					if pclassdefnode7 != null then
						listnode11.add(pclassdefnode7)
					end
					if pclassdefnode10 != null then
						listnode11.add(pclassdefnode10)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode5,
						listnode11
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction60
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist3
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					var pclassdefnode10 = nodearraylist4
					assert pclassdefnode10 isa nullable AClassdef
					listnode11 = concat(listnode11, listnode6)
					if pclassdefnode7 != null then
						listnode11.add(pclassdefnode7)
					end
					if pclassdefnode10 != null then
						listnode11.add(pclassdefnode10)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode3,
						listnode5,
						listnode11
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction61
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode5 = new Array[Object]
					var listnode11 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode4 = nodearraylist2
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					var listnode9 = new Array[Object]
					var listnode8 = nodearraylist4
					assert listnode8 isa Array[Object]
					listnode9 = concat(listnode9, listnode8)
					var pclassdefnode7: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode9
					)
					var pclassdefnode10 = nodearraylist5
					assert pclassdefnode10 isa nullable AClassdef
					listnode11 = concat(listnode11, listnode6)
					if pclassdefnode7 != null then
						listnode11.add(pclassdefnode7)
					end
					if pclassdefnode10 != null then
						listnode11.add(pclassdefnode10)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode3,
						listnode5,
						listnode11
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction62
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist2
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist3
					assert listnode7 isa Array[Object]
					var listnode10 = new Array[Object]
					var listnode9 = nodearraylist4
					assert listnode9 isa Array[Object]
					listnode10 = concat(listnode10, listnode9)
					var pclassdefnode8: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode10
					)
					var pclassdefnode11 = nodearraylist5
					assert pclassdefnode11 isa nullable AClassdef
					listnode12 = concat(listnode12, listnode7)
					if pclassdefnode8 != null then
						listnode12.add(pclassdefnode8)
					end
					if pclassdefnode11 != null then
						listnode12.add(pclassdefnode11)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						null,
						listnode4,
						listnode6,
						listnode12
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction63
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode6 = new Array[Object]
					var listnode12 = new Array[Object]
					var pmoduledeclnode2 = nodearraylist1
					assert pmoduledeclnode2 isa nullable AModuledecl
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var listnode7 = nodearraylist4
					assert listnode7 isa Array[Object]
					var listnode10 = new Array[Object]
					var listnode9 = nodearraylist5
					assert listnode9 isa Array[Object]
					listnode10 = concat(listnode10, listnode9)
					var pclassdefnode8: nullable ATopClassdef = new ATopClassdef.init_atopclassdef(
						listnode10
					)
					var pclassdefnode11 = nodearraylist6
					assert pclassdefnode11 isa nullable AClassdef
					listnode12 = concat(listnode12, listnode7)
					if pclassdefnode8 != null then
						listnode12.add(pclassdefnode8)
					end
					if pclassdefnode11 != null then
						listnode12.add(pclassdefnode11)
					end
					var pmodulenode1: nullable AModule = new AModule.init_amodule(
						pmoduledeclnode2,
						listnode4,
						listnode6,
						listnode12
					)
					node_list = pmodulenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction64
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwmodulenode3 = nodearraylist2
					assert tkwmodulenode3 isa nullable TKwmodule
					var pmodulenamenode4 = nodearraylist4
					assert pmodulenamenode4 isa nullable AModuleName
					var pmoduledeclnode1: nullable AModuledecl = new AModuledecl.init_amoduledecl(
						pdocnode2,
						tkwmodulenode3,
						pmodulenamenode4,
						null
					)
					node_list = pmoduledeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction65
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwmodulenode3 = nodearraylist2
					assert tkwmodulenode3 isa nullable TKwmodule
					var pmodulenamenode4 = nodearraylist4
					assert pmodulenamenode4 isa nullable AModuleName
					var pannotationsnode5 = nodearraylist5
					assert pannotationsnode5 isa nullable AAnnotations
					var pmoduledeclnode1: nullable AModuledecl = new AModuledecl.init_amoduledecl(
						pdocnode2,
						tkwmodulenode3,
						pmodulenamenode4,
						pannotationsnode5
					)
					node_list = pmoduledeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction66
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pvisibilitynode2 = nodearraylist2
					assert pvisibilitynode2 isa nullable AVisibility
					var tkwimportnode3 = nodearraylist3
					assert tkwimportnode3 isa nullable TKwimport
					var pmodulenamenode4 = nodearraylist5
					assert pmodulenamenode4 isa nullable AModuleName
					var pimportnode1: nullable AStdImport = new AStdImport.init_astdimport(
						pvisibilitynode2,
						tkwimportnode3,
						pmodulenamenode4,
						null
					)
					node_list = pimportnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction67
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pvisibilitynode2 = nodearraylist2
					assert pvisibilitynode2 isa nullable AVisibility
					var tkwimportnode3 = nodearraylist3
					assert tkwimportnode3 isa nullable TKwimport
					var pmodulenamenode4 = nodearraylist5
					assert pmodulenamenode4 isa nullable AModuleName
					var pannotationsnode5 = nodearraylist6
					assert pannotationsnode5 isa nullable AAnnotations
					var pimportnode1: nullable AStdImport = new AStdImport.init_astdimport(
						pvisibilitynode2,
						tkwimportnode3,
						pmodulenamenode4,
						pannotationsnode5
					)
					node_list = pimportnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction68
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pvisibilitynode2 = nodearraylist2
					assert pvisibilitynode2 isa nullable AVisibility
					var tkwimportnode3 = nodearraylist3
					assert tkwimportnode3 isa nullable TKwimport
					var tkwendnode4 = nodearraylist5
					assert tkwendnode4 isa nullable TKwend
					var pimportnode1: nullable ANoImport = new ANoImport.init_anoimport(
						pvisibilitynode2,
						tkwimportnode3,
						tkwendnode4
					)
					node_list = pimportnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction69
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var ppropdefnode2 = nodearraylist1
					assert ppropdefnode2 isa nullable APropdef
					if ppropdefnode2 != null then
						listnode3.add(ppropdefnode2)
					end
					var pclassdefnode1: nullable AMainClassdef = new AMainClassdef.init_amainclassdef(
						listnode3
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction70
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					node_list = null
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction71
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var ppropdefnode1: nullable AMainMethPropdef = new AMainMethPropdef.init_amainmethpropdef(
						null,
						pexprnode3
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction73
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var tkwendnode12 = nodearraylist7
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction74
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var tkwendnode12 = nodearraylist8
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction75
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var tkwendnode12 = nodearraylist8
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction76
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var tkwendnode12 = nodearraylist9
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction78
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var tkwendnode12 = nodearraylist9
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction79
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var tkwendnode12 = nodearraylist10
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction81
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tkwendnode13 = nodearraylist8
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction82
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction83
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction84
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction86
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction87
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction89
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var tkwendnode17 = nodearraylist8
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction90
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var tkwendnode17 = nodearraylist9
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction91
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var tkwendnode17 = nodearraylist9
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction92
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var tkwendnode17 = nodearraylist10
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction94
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var tkwendnode17 = nodearraylist10
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction95
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var tkwendnode17 = nodearraylist11
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction97
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var tkwendnode18 = nodearraylist9
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction98
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction99
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction100
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction102
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction103
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction105
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist6
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var tkwendnode12 = nodearraylist8
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction106
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist7
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var tkwendnode12 = nodearraylist9
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction107
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist7
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var tkwendnode12 = nodearraylist9
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction108
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist8
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var tkwendnode12 = nodearraylist10
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction110
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist8
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var tkwendnode12 = nodearraylist10
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction111
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode11 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist9
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var tkwendnode12 = nodearraylist11
					assert tkwendnode12 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode11,
						tkwendnode12
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction113
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction114
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction115
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction116
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction118
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction119
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var tkwendnode13 = nodearraylist12
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction121
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist7
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var tkwendnode17 = nodearraylist9
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction122
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist8
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var tkwendnode17 = nodearraylist10
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction123
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist8
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var tkwendnode17 = nodearraylist10
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction124
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist9
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var tkwendnode17 = nodearraylist11
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction126
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist9
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var tkwendnode17 = nodearraylist11
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction127
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode16 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist10
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var tkwendnode17 = nodearraylist12
					assert tkwendnode17 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode16,
						tkwendnode17
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction129
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist8
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction130
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist9
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction131
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist9
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction132
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist10
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction134
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist10
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction135
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist11
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var tkwendnode18 = nodearraylist13
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction137
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist6
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist8
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction138
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist7
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction139
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist7
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction140
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist8
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction142
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist8
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction143
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist9
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction145
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist9
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction146
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction147
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction148
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction150
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction151
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist10
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction153
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist7
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist9
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction154
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist8
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction155
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist8
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction156
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist9
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction158
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist9
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction159
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist10
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction161
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist8
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist10
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction162
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction163
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction164
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction166
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction167
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist11
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction169
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist6
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist7
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction170
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist7
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist8
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction171
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist7
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist8
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction172
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist8
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist9
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction174
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist8
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist9
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction175
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist9
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist10
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var tkwendnode13 = nodearraylist12
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction177
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction178
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction179
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction180
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist10
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction182
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist10
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction183
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist11
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode14 = nodearraylist13
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction185
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist7
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist8
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction186
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist8
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist9
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction187
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist8
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist9
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction188
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist9
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist10
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction190
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist9
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist10
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction191
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist10
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist11
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var tkwendnode18 = nodearraylist13
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction193
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist8
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction194
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist9
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction195
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist9
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction196
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist10
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist11
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction198
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist10
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist11
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction199
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist11
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist12
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode19 = nodearraylist14
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction201
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist8
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction202
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction203
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction204
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction206
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction207
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction209
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist9
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction210
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction211
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction212
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction214
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction215
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction217
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode16 = nodearraylist7
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist9
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction218
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode16 = nodearraylist8
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction219
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode16 = nodearraylist8
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction220
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction222
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction223
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction225
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode17 = nodearraylist8
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist10
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction226
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode17 = nodearraylist9
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction227
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode17 = nodearraylist9
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction228
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode17 = nodearraylist10
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction230
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode17 = nodearraylist10
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction231
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode17 = nodearraylist11
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction233
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist6
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist9
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction234
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist7
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction235
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist7
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist10
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction236
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist8
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction238
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist8
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist11
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction239
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode10 = new Array[Object]
					var listnode12 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist9
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist10
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var tkwendnode13 = nodearraylist12
					assert tkwendnode13 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode10,
						listnode12,
						tkwendnode13
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction241
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction242
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction243
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction244
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction246
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction247
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode12 = nodearraylist11
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist13
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction249
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist7
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist8
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist10
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction250
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist8
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction251
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist8
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist11
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction252
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist9
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction254
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist9
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist12
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction255
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode15 = new Array[Object]
					var listnode17 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist10
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist11
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var tkwendnode18 = nodearraylist13
					assert tkwendnode18 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode15,
						listnode17,
						tkwendnode18
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction257
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist8
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode17 = nodearraylist9
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction258
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist9
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode17 = nodearraylist10
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction259
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist9
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode17 = nodearraylist10
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction260
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist10
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode17 = nodearraylist11
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction262
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist10
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode17 = nodearraylist11
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction263
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist11
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode17 = nodearraylist12
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist14
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction265
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist6
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist9
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction266
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist7
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction267
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist7
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction268
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist8
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction270
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist8
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction271
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode10 = nodearraylist9
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						null,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction273
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist8
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist10
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction274
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist9
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist11
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction275
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist9
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist11
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction276
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist10
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist12
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction278
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist10
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist12
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction279
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode11 = nodearraylist10
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist11
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist13
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						null,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction281
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist7
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist8
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist10
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction282
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist8
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist9
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction283
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist8
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist9
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction284
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist9
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist10
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction286
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist9
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist10
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction287
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var listnode15 = nodearraylist10
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist11
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						null,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction289
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist8
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist9
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist11
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction290
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist10
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist12
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction291
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist10
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist12
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction292
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist11
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist13
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction294
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist11
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist13
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction295
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var listnode16 = nodearraylist11
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist12
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist14
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						null,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction297
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist6
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist7
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist10
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction298
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist7
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist8
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction299
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist7
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist8
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist11
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction300
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist8
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist9
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction302
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist8
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist9
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist12
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction303
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode11 = new Array[Object]
					var listnode13 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var pexterncodeblocknode9 = nodearraylist9
					assert pexterncodeblocknode9 isa nullable AExternCodeBlock
					var listnode10 = nodearraylist10
					assert listnode10 isa Array[Object]
					listnode11 = concat(listnode11, listnode10)
					var listnode12 = nodearraylist11
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var tkwendnode14 = nodearraylist13
					assert tkwendnode14 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						null,
						pexterncodeblocknode9,
						listnode11,
						listnode13,
						tkwendnode14
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction305
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist9
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist11
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction306
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist10
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist12
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction307
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist10
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist12
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction308
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist10
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist11
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist13
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction310
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist10
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist11
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist13
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction311
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode12 = new Array[Object]
					var listnode14 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var listnode11 = nodearraylist11
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var listnode13 = nodearraylist12
					assert listnode13 isa Array[Object]
					listnode14 = concat(listnode14, listnode13)
					var tkwendnode15 = nodearraylist14
					assert tkwendnode15 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						null,
						pexterncodeblocknode10,
						listnode12,
						listnode14,
						tkwendnode15
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction313
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist6
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist7
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist8
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist9
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist11
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction314
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist8
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist9
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist10
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction315
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist7
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist8
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist9
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist10
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist12
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction316
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist9
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist10
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist11
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction318
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist8
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist9
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist10
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist11
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist13
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction319
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode7 = new Array[Object]
					var listnode16 = new Array[Object]
					var listnode18 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode12 = new Array[Object]
					var listnode11 = nodearraylist9
					assert listnode11 isa Array[Object]
					listnode12 = concat(listnode12, listnode11)
					var pannotationsnode8: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode12,
						null
					)
					var pexterncodeblocknode14 = nodearraylist10
					assert pexterncodeblocknode14 isa nullable AExternCodeBlock
					var listnode15 = nodearraylist11
					assert listnode15 isa Array[Object]
					listnode16 = concat(listnode16, listnode15)
					var listnode17 = nodearraylist12
					assert listnode17 isa Array[Object]
					listnode18 = concat(listnode18, listnode17)
					var tkwendnode19 = nodearraylist14
					assert tkwendnode19 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode7,
						pannotationsnode8,
						pexterncodeblocknode14,
						listnode16,
						listnode18,
						tkwendnode19
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction321
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist7
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist8
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist9
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist10
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist12
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction322
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist9
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist11
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist13
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction323
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist6
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist8
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist9
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist10
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist11
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist13
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction324
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist3
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist10
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist11
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist12
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist14
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction326
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist7
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist8
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist9
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist10
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist11
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist12
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist14
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction327
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist15 = p.pop
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode8 = new Array[Object]
					var listnode17 = new Array[Object]
					var listnode19 = new Array[Object]
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var pclasskindnode5 = nodearraylist4
					assert pclasskindnode5 isa nullable AClasskind
					var tclassidnode6 = nodearraylist8
					assert tclassidnode6 isa nullable TClassid
					var listnode7 = nodearraylist9
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var listnode13 = new Array[Object]
					var listnode12 = nodearraylist10
					assert listnode12 isa Array[Object]
					listnode13 = concat(listnode13, listnode12)
					var pannotationsnode9: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode13,
						null
					)
					var pexterncodeblocknode15 = nodearraylist11
					assert pexterncodeblocknode15 isa nullable AExternCodeBlock
					var listnode16 = nodearraylist12
					assert listnode16 isa Array[Object]
					listnode17 = concat(listnode17, listnode16)
					var listnode18 = nodearraylist13
					assert listnode18 isa Array[Object]
					listnode19 = concat(listnode19, listnode18)
					var tkwendnode20 = nodearraylist15
					assert tkwendnode20 isa nullable TKwend
					var pclassdefnode1: nullable AStdClassdef = new AStdClassdef.init_astdclassdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						pclasskindnode5,
						tclassidnode6,
						listnode8,
						pannotationsnode9,
						pexterncodeblocknode15,
						listnode17,
						listnode19,
						tkwendnode20
					)
					node_list = pclassdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction329
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwclassnode2 = nodearraylist1
					assert tkwclassnode2 isa nullable TKwclass
					var pclasskindnode1: nullable AConcreteClasskind = new AConcreteClasskind.init_aconcreteclasskind(
						tkwclassnode2
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction330
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwabstractnode2 = nodearraylist1
					assert tkwabstractnode2 isa nullable TKwabstract
					var tkwclassnode3 = nodearraylist2
					assert tkwclassnode3 isa nullable TKwclass
					var pclasskindnode1: nullable AAbstractClasskind = new AAbstractClasskind.init_aabstractclasskind(
						tkwabstractnode2,
						tkwclassnode3
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction331
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwinterfacenode2 = nodearraylist1
					assert tkwinterfacenode2 isa nullable TKwinterface
					var pclasskindnode1: nullable AInterfaceClasskind = new AInterfaceClasskind.init_ainterfaceclasskind(
						tkwinterfacenode2
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction332
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwenumnode2 = nodearraylist1
					assert tkwenumnode2 isa nullable TKwenum
					var pclasskindnode1: nullable AEnumClasskind = new AEnumClasskind.init_aenumclasskind(
						tkwenumnode2
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction333
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwuniversalnode2 = nodearraylist1
					assert tkwuniversalnode2 isa nullable TKwuniversal
					var pclasskindnode1: nullable AUniversalClasskind = new AUniversalClasskind.init_auniversalclasskind(
						tkwuniversalnode2
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction334
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwexternnode2 = nodearraylist1
					assert tkwexternnode2 isa nullable TKwextern
					var pclasskindnode1: nullable AExternClasskind = new AExternClasskind.init_aexternclasskind(
						tkwexternnode2,
						null
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction335
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwexternnode2 = nodearraylist1
					assert tkwexternnode2 isa nullable TKwextern
					var tkwclassnode3 = nodearraylist2
					assert tkwclassnode3 isa nullable TKwclass
					var pclasskindnode1: nullable AExternClasskind = new AExternClasskind.init_aexternclasskind(
						tkwexternnode2,
						tkwclassnode3
					)
					node_list = pclasskindnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction336
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pformaldefnode1 = nodearraylist3
					if pformaldefnode1 != null then
						listnode2.add(pformaldefnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction337
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pformaldefnode1 = nodearraylist3
					var listnode2 = nodearraylist4
					assert listnode2 isa Array[Object]
					if pformaldefnode1 != null then
						listnode3.add(pformaldefnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction338
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pformaldefnode1 = nodearraylist3
					node_list = pformaldefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction339
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tclassidnode2 = nodearraylist1
					assert tclassidnode2 isa nullable TClassid
					var pformaldefnode1: nullable AFormaldef = new AFormaldef.init_aformaldef(
						tclassidnode2,
						null,
						null
					)
					node_list = pformaldefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction340
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tclassidnode2 = nodearraylist1
					assert tclassidnode2 isa nullable TClassid
					var pannotationsnode4 = nodearraylist2
					assert pannotationsnode4 isa nullable AAnnotations
					var pformaldefnode1: nullable AFormaldef = new AFormaldef.init_aformaldef(
						tclassidnode2,
						null,
						pannotationsnode4
					)
					node_list = pformaldefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction341
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tclassidnode2 = nodearraylist1
					assert tclassidnode2 isa nullable TClassid
					var ptypenode3 = nodearraylist2
					assert ptypenode3 isa nullable AType
					var pformaldefnode1: nullable AFormaldef = new AFormaldef.init_aformaldef(
						tclassidnode2,
						ptypenode3,
						null
					)
					node_list = pformaldefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction342
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tclassidnode2 = nodearraylist1
					assert tclassidnode2 isa nullable TClassid
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var pannotationsnode4 = nodearraylist2
					assert pannotationsnode4 isa nullable AAnnotations
					var pformaldefnode1: nullable AFormaldef = new AFormaldef.init_aformaldef(
						tclassidnode2,
						ptypenode3,
						pannotationsnode4
					)
					node_list = pformaldefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction343
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwsupernode2 = nodearraylist2
					assert tkwsupernode2 isa nullable TKwsuper
					var ptypenode3 = nodearraylist4
					assert ptypenode3 isa nullable AType
					var psuperclassnode1: nullable ASuperclass = new ASuperclass.init_asuperclass(
						tkwsupernode2,
						ptypenode3,
						null
					)
					node_list = psuperclassnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction344
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwsupernode2 = nodearraylist2
					assert tkwsupernode2 isa nullable TKwsuper
					var ptypenode3 = nodearraylist4
					assert ptypenode3 isa nullable AType
					var pannotationsnode4 = nodearraylist5
					assert pannotationsnode4 isa nullable AAnnotations
					var psuperclassnode1: nullable ASuperclass = new ASuperclass.init_asuperclass(
						tkwsupernode2,
						ptypenode3,
						pannotationsnode4
					)
					node_list = psuperclassnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction345
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ppropdefnode1 = nodearraylist1
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction346
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist7
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction347
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction348
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist6
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction349
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist7
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist9
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction350
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist7
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction351
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction352
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist6
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction353
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist7
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist9
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction354
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction355
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist9
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteMethPropdef = new AConcreteMethPropdef.init_aconcretemethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction356
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist6
					assert pannotationsnode8 isa nullable AAnnotations
					var ppropdefnode1: nullable ADeferredMethPropdef = new ADeferredMethPropdef.init_adeferredmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction357
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist7
					assert pannotationsnode8 isa nullable AAnnotations
					var ppropdefnode1: nullable ADeferredMethPropdef = new ADeferredMethPropdef.init_adeferredmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction358
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable ADeferredMethPropdef = new ADeferredMethPropdef.init_adeferredmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction359
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable ADeferredMethPropdef = new ADeferredMethPropdef.init_adeferredmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction360
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable AInternMethPropdef = new AInternMethPropdef.init_ainternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction361
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable AInternMethPropdef = new AInternMethPropdef.init_ainternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction362
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction363
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction364
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction365
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist9
					assert tstringnode8 isa nullable TString
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction366
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction367
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction368
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction369
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist9
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist10
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction370
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction371
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction372
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction373
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist9
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction374
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction375
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction376
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction377
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist9
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist10
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist11
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction378
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist6
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction379
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction380
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist3
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist6
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction381
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwmethnode5 = nodearraylist4
					assert tkwmethnode5 isa nullable TKwmeth
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist7
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternMethPropdef = new AExternMethPropdef.init_aexternmethpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwmethnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction382
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist4
					assert tattridnode8 isa nullable TAttrid
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction383
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction384
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction385
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var tkwredefnode5 = nodearraylist3
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction386
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist2
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction387
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist2
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist3
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction388
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pablenode4 = nodearraylist3
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction389
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pablenode4 = nodearraylist3
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist4
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist5
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist6
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist7
					assert tattridnode8 isa nullable TAttrid
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction390
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist4
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction391
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction392
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction393
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var tkwredefnode5 = nodearraylist3
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist7
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction394
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist2
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction395
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist2
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist3
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist7
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction396
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pablenode4 = nodearraylist3
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist7
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction397
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pablenode4 = nodearraylist3
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist4
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist5
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist6
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist7
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist8
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction398
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist4
					assert tattridnode8 isa nullable TAttrid
					var pexprnode12 = nodearraylist7
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction399
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction400
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction401
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var tkwredefnode5 = nodearraylist3
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction402
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist2
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction403
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist2
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist3
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction404
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pablenode4 = nodearraylist3
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction405
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pablenode4 = nodearraylist3
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist4
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist5
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist6
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist7
					assert tattridnode8 isa nullable TAttrid
					var pexprnode12 = nodearraylist10
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction406
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist4
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction407
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction408
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction409
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var tkwredefnode5 = nodearraylist3
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist7
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist10
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction410
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist2
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist5
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction411
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist2
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist3
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist7
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist10
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction412
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pablenode4 = nodearraylist3
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist4
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist5
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist6
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist7
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist10
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction413
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode3 = nodearraylist2
					assert pablenode3 isa nullable AAble
					var pablenode4 = nodearraylist3
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist4
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist5
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist6
					assert tkwvarnode7 isa nullable TKwvar
					var tattridnode8 = nodearraylist7
					assert tattridnode8 isa nullable TAttrid
					var ptypenode10 = nodearraylist8
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist11
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						pablenode3,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						tattridnode8,
						null,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction414
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction415
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction416
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction417
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction418
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist5
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction419
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist6
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction420
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist6
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction421
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist7
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction422
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var pannotationsnode11 = nodearraylist5
					assert pannotationsnode11 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						pannotationsnode11,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction423
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var pannotationsnode11 = nodearraylist6
					assert pannotationsnode11 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						pannotationsnode11,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction424
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var pannotationsnode11 = nodearraylist6
					assert pannotationsnode11 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						pannotationsnode11,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction425
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pannotationsnode11 = nodearraylist7
					assert pannotationsnode11 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						pannotationsnode11,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction426
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist5
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var pannotationsnode11 = nodearraylist6
					assert pannotationsnode11 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						pannotationsnode11,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction427
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist6
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var pannotationsnode11 = nodearraylist7
					assert pannotationsnode11 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						pannotationsnode11,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction428
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist6
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var pannotationsnode11 = nodearraylist7
					assert pannotationsnode11 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						pannotationsnode11,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction429
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist7
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pannotationsnode11 = nodearraylist8
					assert pannotationsnode11 isa nullable AAnnotations
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						pannotationsnode11,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction430
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var pexprnode12 = nodearraylist7
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction431
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction432
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction433
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction434
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist5
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction435
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist6
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction436
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist6
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction437
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist7
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pexprnode12 = nodearraylist10
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						null,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction438
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var pannotationsnode11 = nodearraylist8
					assert pannotationsnode11 isa nullable AAnnotations
					var pexprnode12 = nodearraylist7
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						pannotationsnode11,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction439
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var pannotationsnode11 = nodearraylist9
					assert pannotationsnode11 isa nullable AAnnotations
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						pannotationsnode11,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction440
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var pannotationsnode11 = nodearraylist9
					assert pannotationsnode11 isa nullable AAnnotations
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						pannotationsnode11,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction441
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pannotationsnode11 = nodearraylist10
					assert pannotationsnode11 isa nullable AAnnotations
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						null,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						pannotationsnode11,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction442
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist5
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var pannotationsnode11 = nodearraylist9
					assert pannotationsnode11 isa nullable AAnnotations
					var pexprnode12 = nodearraylist8
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						pannotationsnode11,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction443
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist6
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var pannotationsnode11 = nodearraylist10
					assert pannotationsnode11 isa nullable AAnnotations
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						null,
						pannotationsnode11,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction444
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist6
					assert pablenode4 isa nullable AAble
					var pvisibilitynode6 = nodearraylist2
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist3
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist4
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist5
					assert ptypenode10 isa nullable AType
					var pannotationsnode11 = nodearraylist10
					assert pannotationsnode11 isa nullable AAnnotations
					var pexprnode12 = nodearraylist9
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						null,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						pannotationsnode11,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction445
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pablenode4 = nodearraylist7
					assert pablenode4 isa nullable AAble
					var tkwredefnode5 = nodearraylist2
					assert tkwredefnode5 isa nullable TKwredef
					var pvisibilitynode6 = nodearraylist3
					assert pvisibilitynode6 isa nullable AVisibility
					var tkwvarnode7 = nodearraylist4
					assert tkwvarnode7 isa nullable TKwvar
					var tidnode9 = nodearraylist5
					assert tidnode9 isa nullable TId
					var ptypenode10 = nodearraylist6
					assert ptypenode10 isa nullable AType
					var pannotationsnode11 = nodearraylist11
					assert pannotationsnode11 isa nullable AAnnotations
					var pexprnode12 = nodearraylist10
					assert pexprnode12 isa nullable AExpr
					var ppropdefnode1: nullable AAttrPropdef = new AAttrPropdef.init_aattrpropdef(
						pdocnode2,
						null,
						pablenode4,
						tkwredefnode5,
						pvisibilitynode6,
						tkwvarnode7,
						null,
						tidnode9,
						ptypenode10,
						pannotationsnode11,
						pexprnode12
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction446
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist3
					assert tkwinitnode5 isa nullable TKwinit
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist6
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwinitnode5,
						null,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction447
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist4
					assert tkwinitnode5 isa nullable TKwinit
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist7
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwinitnode5,
						null,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction448
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist3
					assert tkwinitnode5 isa nullable TKwinit
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist7
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwinitnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction449
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist4
					assert tkwinitnode5 isa nullable TKwinit
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwinitnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction450
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist3
					assert tkwinitnode5 isa nullable TKwinit
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist5
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist7
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwinitnode5,
						null,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction451
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist4
					assert tkwinitnode5 isa nullable TKwinit
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist6
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwinitnode5,
						null,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction452
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist3
					assert tkwinitnode5 isa nullable TKwinit
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist6
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwinitnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction453
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist4
					assert tkwinitnode5 isa nullable TKwinit
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist7
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist9
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwinitnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction454
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist3
					assert tkwinitnode5 isa nullable TKwinit
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist6
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwinitnode5,
						null,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction455
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist4
					assert tkwinitnode5 isa nullable TKwinit
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist7
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwinitnode5,
						null,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction456
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist3
					assert tkwinitnode5 isa nullable TKwinit
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist7
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwinitnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction457
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist4
					assert tkwinitnode5 isa nullable TKwinit
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwinitnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction458
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist3
					assert tkwinitnode5 isa nullable TKwinit
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist5
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist7
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwinitnode5,
						null,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction459
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist4
					assert tkwinitnode5 isa nullable TKwinit
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist6
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwinitnode5,
						null,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction460
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist3
					assert tkwinitnode5 isa nullable TKwinit
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist6
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist8
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwinitnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction461
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwinitnode5 = nodearraylist4
					assert tkwinitnode5 isa nullable TKwinit
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pannotationsnode8 = nodearraylist7
					assert pannotationsnode8 isa nullable AAnnotations
					var pexprnode9 = nodearraylist9
					assert pexprnode9 isa nullable AExpr
					var ppropdefnode1: nullable AConcreteInitPropdef = new AConcreteInitPropdef.init_aconcreteinitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwinitnode5,
						pmethidnode6,
						psignaturenode7,
						pannotationsnode8,
						pexprnode9
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction462
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwtypenode5 = nodearraylist3
					assert tkwtypenode5 isa nullable TKwtype
					var tclassidnode6 = nodearraylist4
					assert tclassidnode6 isa nullable TClassid
					var ptypenode7 = nodearraylist5
					assert ptypenode7 isa nullable AType
					var ppropdefnode1: nullable ATypePropdef = new ATypePropdef.init_atypepropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwtypenode5,
						tclassidnode6,
						ptypenode7,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction463
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwtypenode5 = nodearraylist4
					assert tkwtypenode5 isa nullable TKwtype
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var ppropdefnode1: nullable ATypePropdef = new ATypePropdef.init_atypepropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwtypenode5,
						tclassidnode6,
						ptypenode7,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction464
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwtypenode5 = nodearraylist3
					assert tkwtypenode5 isa nullable TKwtype
					var tclassidnode6 = nodearraylist4
					assert tclassidnode6 isa nullable TClassid
					var ptypenode7 = nodearraylist5
					assert ptypenode7 isa nullable AType
					var pannotationsnode8 = nodearraylist6
					assert pannotationsnode8 isa nullable AAnnotations
					var ppropdefnode1: nullable ATypePropdef = new ATypePropdef.init_atypepropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwtypenode5,
						tclassidnode6,
						ptypenode7,
						pannotationsnode8
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction465
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwtypenode5 = nodearraylist4
					assert tkwtypenode5 isa nullable TKwtype
					var tclassidnode6 = nodearraylist5
					assert tclassidnode6 isa nullable TClassid
					var ptypenode7 = nodearraylist6
					assert ptypenode7 isa nullable AType
					var pannotationsnode8 = nodearraylist7
					assert pannotationsnode8 isa nullable AAnnotations
					var ppropdefnode1: nullable ATypePropdef = new ATypePropdef.init_atypepropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwtypenode5,
						tclassidnode6,
						ptypenode7,
						pannotationsnode8
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction466
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction467
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction468
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction469
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction470
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist7
					assert tstringnode8 isa nullable TString
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction471
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction472
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction473
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist9
					assert tstringnode8 isa nullable TString
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction474
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist7
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction475
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction476
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction477
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction478
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist7
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction479
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction480
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction481
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist9
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist10
					assert pexterncallsnode9 isa nullable AExternCalls
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						null
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction482
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction483
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction484
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction485
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction486
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist7
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction487
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction488
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction489
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist9
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction490
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist7
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction491
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction492
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction493
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction494
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist7
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction495
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction496
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist8
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist9
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist10
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction497
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist9
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist10
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist11
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction498
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist5
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction499
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist6
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction500
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist6
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction501
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction502
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist5
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist6
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction503
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist6
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction504
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist6
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction505
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist7
					assert tstringnode8 isa nullable TString
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						null,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction506
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist5
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist6
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction507
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist6
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction508
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist6
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction509
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var pexterncallsnode9 = nodearraylist7
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						null,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction510
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist4
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist5
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist6
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist7
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction511
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist6
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist7
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						null,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction512
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var pvisibilitynode4 = nodearraylist2
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist3
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist4
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist5
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist6
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist7
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist8
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						null,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction513
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pdocnode2 = nodearraylist1
					assert pdocnode2 isa nullable ADoc
					var tkwredefnode3 = nodearraylist2
					assert tkwredefnode3 isa nullable TKwredef
					var pvisibilitynode4 = nodearraylist3
					assert pvisibilitynode4 isa nullable AVisibility
					var tkwnewnode5 = nodearraylist4
					assert tkwnewnode5 isa nullable TKwnew
					var pmethidnode6 = nodearraylist5
					assert pmethidnode6 isa nullable AMethid
					var psignaturenode7 = nodearraylist6
					assert psignaturenode7 isa nullable ASignature
					var tstringnode8 = nodearraylist7
					assert tstringnode8 isa nullable TString
					var pexterncallsnode9 = nodearraylist8
					assert pexterncallsnode9 isa nullable AExternCalls
					var pexterncodeblocknode10 = nodearraylist9
					assert pexterncodeblocknode10 isa nullable AExternCodeBlock
					var ppropdefnode1: nullable AExternInitPropdef = new AExternInitPropdef.init_aexterninitpropdef(
						pdocnode2,
						tkwredefnode3,
						pvisibilitynode4,
						tkwnewnode5,
						pmethidnode6,
						psignaturenode7,
						tstringnode8,
						pexterncallsnode9,
						pexterncodeblocknode10
					)
					node_list = ppropdefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction514
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pannotationsnode1 = nodearraylist2
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction515
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pannotationsnode1 = nodearraylist3
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction517
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pannotationsnode1 = nodearraylist3
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction518
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwreadablenode3 = nodearraylist1
					assert tkwreadablenode3 isa nullable TKwreadable
					var pablenode1: nullable AReadAble = new AReadAble.init_areadable(
						null,
						tkwreadablenode3
					)
					node_list = pablenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction519
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwredefnode2 = nodearraylist1
					assert tkwredefnode2 isa nullable TKwredef
					var tkwreadablenode3 = nodearraylist2
					assert tkwreadablenode3 isa nullable TKwreadable
					var pablenode1: nullable AReadAble = new AReadAble.init_areadable(
						tkwredefnode2,
						tkwreadablenode3
					)
					node_list = pablenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction520
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwwritablenode4 = nodearraylist1
					assert tkwwritablenode4 isa nullable TKwwritable
					var pablenode1: nullable AWriteAble = new AWriteAble.init_awriteable(
						null,
						null,
						tkwwritablenode4
					)
					node_list = pablenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction521
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwredefnode2 = nodearraylist1
					assert tkwredefnode2 isa nullable TKwredef
					var tkwwritablenode4 = nodearraylist2
					assert tkwwritablenode4 isa nullable TKwwritable
					var pablenode1: nullable AWriteAble = new AWriteAble.init_awriteable(
						tkwredefnode2,
						null,
						tkwwritablenode4
					)
					node_list = pablenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction522
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pvisibilitynode3 = nodearraylist1
					assert pvisibilitynode3 isa nullable AVisibility
					var tkwwritablenode4 = nodearraylist2
					assert tkwwritablenode4 isa nullable TKwwritable
					var pablenode1: nullable AWriteAble = new AWriteAble.init_awriteable(
						null,
						pvisibilitynode3,
						tkwwritablenode4
					)
					node_list = pablenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction523
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwredefnode2 = nodearraylist1
					assert tkwredefnode2 isa nullable TKwredef
					var pvisibilitynode3 = nodearraylist2
					assert pvisibilitynode3 isa nullable AVisibility
					var tkwwritablenode4 = nodearraylist3
					assert tkwwritablenode4 isa nullable TKwwritable
					var pablenode1: nullable AWriteAble = new AWriteAble.init_awriteable(
						tkwredefnode2,
						pvisibilitynode3,
						tkwwritablenode4
					)
					node_list = pablenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction524
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var pvisibilitynode1: nullable APublicVisibility = new APublicVisibility.init_apublicvisibility
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction525
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwprivatenode2 = nodearraylist1
					assert tkwprivatenode2 isa nullable TKwprivate
					var pvisibilitynode1: nullable APrivateVisibility = new APrivateVisibility.init_aprivatevisibility(
						tkwprivatenode2
					)
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction526
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwprotectednode2 = nodearraylist1
					assert tkwprotectednode2 isa nullable TKwprotected
					var pvisibilitynode1: nullable AProtectedVisibility = new AProtectedVisibility.init_aprotectedvisibility(
						tkwprotectednode2
					)
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction527
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwintrudenode2 = nodearraylist1
					assert tkwintrudenode2 isa nullable TKwintrude
					var pvisibilitynode1: nullable AIntrudeVisibility = new AIntrudeVisibility.init_aintrudevisibility(
						tkwintrudenode2
					)
					node_list = pvisibilitynode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction528
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var pmethidnode1: nullable AIdMethid = new AIdMethid.init_aidmethid(
						tidnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction529
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tplusnode2 = nodearraylist1
					assert tplusnode2 isa nullable TPlus
					var pmethidnode1: nullable APlusMethid = new APlusMethid.init_aplusmethid(
						tplusnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction530
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tminusnode2 = nodearraylist1
					assert tminusnode2 isa nullable TMinus
					var pmethidnode1: nullable AMinusMethid = new AMinusMethid.init_aminusmethid(
						tminusnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction531
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstarnode2 = nodearraylist1
					assert tstarnode2 isa nullable TStar
					var pmethidnode1: nullable AStarMethid = new AStarMethid.init_astarmethid(
						tstarnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction532
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tslashnode2 = nodearraylist1
					assert tslashnode2 isa nullable TSlash
					var pmethidnode1: nullable ASlashMethid = new ASlashMethid.init_aslashmethid(
						tslashnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction533
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tpercentnode2 = nodearraylist1
					assert tpercentnode2 isa nullable TPercent
					var pmethidnode1: nullable APercentMethid = new APercentMethid.init_apercentmethid(
						tpercentnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction534
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var teqnode2 = nodearraylist1
					assert teqnode2 isa nullable TEq
					var pmethidnode1: nullable AEqMethid = new AEqMethid.init_aeqmethid(
						teqnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction535
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tnenode2 = nodearraylist1
					assert tnenode2 isa nullable TNe
					var pmethidnode1: nullable ANeMethid = new ANeMethid.init_anemethid(
						tnenode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction536
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tlenode2 = nodearraylist1
					assert tlenode2 isa nullable TLe
					var pmethidnode1: nullable ALeMethid = new ALeMethid.init_alemethid(
						tlenode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction537
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tgenode2 = nodearraylist1
					assert tgenode2 isa nullable TGe
					var pmethidnode1: nullable AGeMethid = new AGeMethid.init_agemethid(
						tgenode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction538
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tltnode2 = nodearraylist1
					assert tltnode2 isa nullable TLt
					var pmethidnode1: nullable ALtMethid = new ALtMethid.init_altmethid(
						tltnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction539
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tgtnode2 = nodearraylist1
					assert tgtnode2 isa nullable TGt
					var pmethidnode1: nullable AGtMethid = new AGtMethid.init_agtmethid(
						tgtnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction540
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tllnode2 = nodearraylist1
					assert tllnode2 isa nullable TLl
					var pmethidnode1: nullable ALlMethid = new ALlMethid.init_allmethid(
						tllnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction541
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tggnode2 = nodearraylist1
					assert tggnode2 isa nullable TGg
					var pmethidnode1: nullable AGgMethid = new AGgMethid.init_aggmethid(
						tggnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction542
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var tcbranode3 = nodearraylist2
					assert tcbranode3 isa nullable TCbra
					var pmethidnode1: nullable ABraMethid = new ABraMethid.init_abramethid(
						tobranode2,
						tcbranode3
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction543
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstarshipnode2 = nodearraylist1
					assert tstarshipnode2 isa nullable TStarship
					var pmethidnode1: nullable AStarshipMethid = new AStarshipMethid.init_astarshipmethid(
						tstarshipnode2
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction544
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var tassignnode3 = nodearraylist2
					assert tassignnode3 isa nullable TAssign
					var pmethidnode1: nullable AAssignMethid = new AAssignMethid.init_aassignmethid(
						tidnode2,
						tassignnode3
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction545
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var tcbranode3 = nodearraylist2
					assert tcbranode3 isa nullable TCbra
					var tassignnode4 = nodearraylist3
					assert tassignnode4 isa nullable TAssign
					var pmethidnode1: nullable ABraassignMethid = new ABraassignMethid.init_abraassignmethid(
						tobranode2,
						tcbranode3,
						tassignnode4
					)
					node_list = pmethidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction546
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode6 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var tcparnode4 = nodearraylist3
					assert tcparnode4 isa nullable TCpar
					var ptypenode5 = nodearraylist4
					assert ptypenode5 isa nullable AType
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode3,
						tcparnode4,
						ptypenode5,
						listnode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction547
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode7 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var ptypenode6 = nodearraylist5
					assert ptypenode6 isa nullable AType
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode4,
						tcparnode5,
						ptypenode6,
						listnode7
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction548
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode7 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var tcparnode4 = nodearraylist3
					assert tcparnode4 isa nullable TCpar
					var ptypenode5 = nodearraylist4
					assert ptypenode5 isa nullable AType
					var listnode6 = nodearraylist6
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode3,
						tcparnode4,
						ptypenode5,
						listnode7
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction549
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode8 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var ptypenode6 = nodearraylist5
					assert ptypenode6 isa nullable AType
					var listnode7 = nodearraylist7
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode4,
						tcparnode5,
						ptypenode6,
						listnode8
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction550
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode6 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var tcparnode4 = nodearraylist3
					assert tcparnode4 isa nullable TCpar
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode3,
						tcparnode4,
						null,
						listnode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction551
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode7 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode4,
						tcparnode5,
						null,
						listnode7
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction552
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode7 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var tcparnode4 = nodearraylist3
					assert tcparnode4 isa nullable TCpar
					var listnode6 = nodearraylist5
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode3,
						tcparnode4,
						null,
						listnode7
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction553
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode8 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var listnode7 = nodearraylist6
					assert listnode7 isa Array[Object]
					listnode8 = concat(listnode8, listnode7)
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode4,
						tcparnode5,
						null,
						listnode8
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction554
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode6 = new Array[Object]
					var ptypenode5 = nodearraylist1
					assert ptypenode5 isa nullable AType
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						null,
						listnode3,
						null,
						ptypenode5,
						listnode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction555
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode7 = new Array[Object]
					var ptypenode5 = nodearraylist1
					assert ptypenode5 isa nullable AType
					var listnode6 = nodearraylist3
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						null,
						listnode3,
						null,
						ptypenode5,
						listnode7
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction556
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode6 = new Array[Object]
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						null,
						listnode3,
						null,
						null,
						listnode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction557
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode7 = new Array[Object]
					var listnode6 = nodearraylist2
					assert listnode6 isa Array[Object]
					listnode7 = concat(listnode7, listnode6)
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						null,
						listnode3,
						null,
						null,
						listnode7
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction558
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode6 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var tcparnode4 = nodearraylist3
					assert tcparnode4 isa nullable TCpar
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode3,
						tcparnode4,
						null,
						listnode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction559
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode7 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode4,
						tcparnode5,
						null,
						listnode7
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction560
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode6 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var tcparnode4 = nodearraylist3
					assert tcparnode4 isa nullable TCpar
					var ptypenode5 = nodearraylist4
					assert ptypenode5 isa nullable AType
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode3,
						tcparnode4,
						ptypenode5,
						listnode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction561
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode7 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var ptypenode6 = nodearraylist5
					assert ptypenode6 isa nullable AType
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						toparnode2,
						listnode4,
						tcparnode5,
						ptypenode6,
						listnode7
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction562
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var listnode3 = new Array[Object]
					var listnode6 = new Array[Object]
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						null,
						listnode3,
						null,
						null,
						listnode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction563
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode6 = new Array[Object]
					var ptypenode5 = nodearraylist1
					assert ptypenode5 isa nullable AType
					var psignaturenode1: nullable ASignature = new ASignature.init_asignature(
						null,
						listnode3,
						null,
						ptypenode5,
						listnode6
					)
					node_list = psignaturenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction564
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pparamnode1 = nodearraylist1
					if pparamnode1 != null then
						listnode2.add(pparamnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction565
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pparamnode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if pparamnode1 != null then
						listnode3.add(pparamnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction566
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pparamnode1 = nodearraylist3
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction567
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						null,
						null,
						null
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction568
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var pannotationsnode5 = nodearraylist2
					assert pannotationsnode5 isa nullable AAnnotations
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						null,
						null,
						pannotationsnode5
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction569
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var ptypenode3 = nodearraylist2
					assert ptypenode3 isa nullable AType
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						ptypenode3,
						null,
						null
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction570
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var pannotationsnode5 = nodearraylist2
					assert pannotationsnode5 isa nullable AAnnotations
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						ptypenode3,
						null,
						pannotationsnode5
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction571
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var ptypenode3 = nodearraylist2
					assert ptypenode3 isa nullable AType
					var tdotdotdotnode4 = nodearraylist3
					assert tdotdotdotnode4 isa nullable TDotdotdot
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						ptypenode3,
						tdotdotdotnode4,
						null
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction572
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var tdotdotdotnode4 = nodearraylist4
					assert tdotdotdotnode4 isa nullable TDotdotdot
					var pannotationsnode5 = nodearraylist2
					assert pannotationsnode5 isa nullable AAnnotations
					var pparamnode1: nullable AParam = new AParam.init_aparam(
						tidnode2,
						ptypenode3,
						tdotdotdotnode4,
						pannotationsnode5
					)
					node_list = pparamnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction573
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					listnode2 = concat(listnode2, listnode1)
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction574
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tbangnode3 = nodearraylist1
					assert tbangnode3 isa nullable TBang
					var tidnode4 = nodearraylist2
					assert tidnode4 isa nullable TId
					var psignaturenode5 = nodearraylist3
					assert psignaturenode5 isa nullable ASignature
					var pclosuredeclnode1: nullable AClosureDecl = new AClosureDecl.init_aclosuredecl(
						null,
						tbangnode3,
						tidnode4,
						psignaturenode5,
						null
					)
					node_list = pclosuredeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction575
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var tbangnode3 = nodearraylist2
					assert tbangnode3 isa nullable TBang
					var tidnode4 = nodearraylist3
					assert tidnode4 isa nullable TId
					var psignaturenode5 = nodearraylist4
					assert psignaturenode5 isa nullable ASignature
					var pclosuredeclnode1: nullable AClosureDecl = new AClosureDecl.init_aclosuredecl(
						tkwbreaknode2,
						tbangnode3,
						tidnode4,
						psignaturenode5,
						null
					)
					node_list = pclosuredeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction576
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tbangnode3 = nodearraylist1
					assert tbangnode3 isa nullable TBang
					var tidnode4 = nodearraylist2
					assert tidnode4 isa nullable TId
					var psignaturenode5 = nodearraylist3
					assert psignaturenode5 isa nullable ASignature
					var pexprnode6 = nodearraylist5
					assert pexprnode6 isa nullable AExpr
					var pclosuredeclnode1: nullable AClosureDecl = new AClosureDecl.init_aclosuredecl(
						null,
						tbangnode3,
						tidnode4,
						psignaturenode5,
						pexprnode6
					)
					node_list = pclosuredeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction577
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var tbangnode3 = nodearraylist2
					assert tbangnode3 isa nullable TBang
					var tidnode4 = nodearraylist3
					assert tidnode4 isa nullable TId
					var psignaturenode5 = nodearraylist4
					assert psignaturenode5 isa nullable ASignature
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pclosuredeclnode1: nullable AClosureDecl = new AClosureDecl.init_aclosuredecl(
						tkwbreaknode2,
						tbangnode3,
						tidnode4,
						psignaturenode5,
						pexprnode6
					)
					node_list = pclosuredeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction578
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tbangnode3 = nodearraylist1
					assert tbangnode3 isa nullable TBang
					var tidnode4 = nodearraylist2
					assert tidnode4 isa nullable TId
					var psignaturenode5 = nodearraylist3
					assert psignaturenode5 isa nullable ASignature
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pclosuredeclnode1: nullable AClosureDecl = new AClosureDecl.init_aclosuredecl(
						null,
						tbangnode3,
						tidnode4,
						psignaturenode5,
						pexprnode6
					)
					node_list = pclosuredeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction579
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var tbangnode3 = nodearraylist2
					assert tbangnode3 isa nullable TBang
					var tidnode4 = nodearraylist3
					assert tidnode4 isa nullable TId
					var psignaturenode5 = nodearraylist4
					assert psignaturenode5 isa nullable ASignature
					var pexprnode6 = nodearraylist7
					assert pexprnode6 isa nullable AExpr
					var pclosuredeclnode1: nullable AClosureDecl = new AClosureDecl.init_aclosuredecl(
						tkwbreaknode2,
						tbangnode3,
						tidnode4,
						psignaturenode5,
						pexprnode6
					)
					node_list = pclosuredeclnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction580
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode3 = nodearraylist1
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AReturnExpr = new AReturnExpr.init_areturnexpr(
						null,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction581
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwimportnode2 = nodearraylist1
					assert tkwimportnode2 isa nullable TKwimport
					var pexterncallnode3 = nodearraylist3
					assert pexterncallnode3 isa nullable AExternCall
					if pexterncallnode3 != null then
						listnode4.add(pexterncallnode3)
					end
					var pexterncallsnode1: nullable AExternCalls = new AExternCalls.init_aexterncalls(
						tkwimportnode2,
						listnode4
					)
					node_list = pexterncallsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction582
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tkwimportnode2 = nodearraylist1
					assert tkwimportnode2 isa nullable TKwimport
					var pexterncallnode3 = nodearraylist3
					assert pexterncallnode3 isa nullable AExternCall
					var listnode4 = nodearraylist4
					assert listnode4 isa Array[Object]
					if pexterncallnode3 != null then
						listnode5.add(pexterncallnode3)
					end
					listnode5 = concat(listnode5, listnode4)
					var pexterncallsnode1: nullable AExternCalls = new AExternCalls.init_aexterncalls(
						tkwimportnode2,
						listnode5
					)
					node_list = pexterncallsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction583
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexterncallnode1 = nodearraylist3
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction584
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexterncallnode1 = nodearraylist1
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction586
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwsupernode2 = nodearraylist1
					assert tkwsupernode2 isa nullable TKwsuper
					var pexterncallnode1: nullable ASuperExternCall = new ASuperExternCall.init_asuperexterncall(
						tkwsupernode2
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction587
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pmethidnode2 = nodearraylist1
					assert pmethidnode2 isa nullable AMethid
					var pexterncallnode1: nullable ALocalPropExternCall = new ALocalPropExternCall.init_alocalpropexterncall(
						pmethidnode2
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction588
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tclassidnode2 = nodearraylist1
					assert tclassidnode2 isa nullable TClassid
					var tquadnode3 = nodearraylist2
					assert tquadnode3 isa nullable TQuad
					var pmethidnode4 = nodearraylist3
					assert pmethidnode4 isa nullable AMethid
					var pexterncallnode1: nullable AFullPropExternCall = new AFullPropExternCall.init_afullpropexterncall(
						tclassidnode2,
						tquadnode3,
						pmethidnode4
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction589
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tclassidnode2 = nodearraylist1
					assert tclassidnode2 isa nullable TClassid
					var pexterncallnode1: nullable AInitPropExternCall = new AInitPropExternCall.init_ainitpropexterncall(
						tclassidnode2
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction590
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tkwasnode3 = nodearraylist2
					assert tkwasnode3 isa nullable TKwas
					var ptypenode4 = nodearraylist6
					assert ptypenode4 isa nullable AType
					var pexterncallnode1: nullable ACastAsExternCall = new ACastAsExternCall.init_acastasexterncall(
						ptypenode2,
						tkwasnode3,
						ptypenode4
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction591
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tkwasnode3 = nodearraylist2
					assert tkwasnode3 isa nullable TKwas
					var tkwnullablenode4 = nodearraylist4
					assert tkwnullablenode4 isa nullable TKwnullable
					var pexterncallnode1: nullable AAsNullableExternCall = new AAsNullableExternCall.init_aasnullableexterncall(
						ptypenode2,
						tkwasnode3,
						tkwnullablenode4
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction592
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var tkwasnode3 = nodearraylist2
					assert tkwasnode3 isa nullable TKwas
					var tkwnotnode4 = nodearraylist4
					assert tkwnotnode4 isa nullable TKwnot
					var tkwnullablenode5 = nodearraylist6
					assert tkwnullablenode5 isa nullable TKwnullable
					var pexterncallnode1: nullable AAsNotNullableExternCall = new AAsNotNullableExternCall.init_aasnotnullableexterncall(
						ptypenode2,
						tkwasnode3,
						tkwnotnode4,
						tkwnullablenode5
					)
					node_list = pexterncallnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction593
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwinnode2 = nodearraylist1
					assert tkwinnode2 isa nullable TKwin
					var tstringnode3 = nodearraylist2
					assert tstringnode3 isa nullable TString
					var pinlanguagenode1: nullable AInLanguage = new AInLanguage.init_ainlanguage(
						tkwinnode2,
						tstringnode3
					)
					node_list = pinlanguagenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction594
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var texterncodesegmentnode3 = nodearraylist1
					assert texterncodesegmentnode3 isa nullable TExternCodeSegment
					var pexterncodeblocknode1: nullable AExternCodeBlock = new AExternCodeBlock.init_aexterncodeblock(
						null,
						texterncodesegmentnode3
					)
					node_list = pexterncodeblocknode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction595
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pinlanguagenode2 = nodearraylist1
					assert pinlanguagenode2 isa nullable AInLanguage
					var texterncodesegmentnode3 = nodearraylist2
					assert texterncodesegmentnode3 isa nullable TExternCodeSegment
					var pexterncodeblocknode1: nullable AExternCodeBlock = new AExternCodeBlock.init_aexterncodeblock(
						pinlanguagenode2,
						texterncodesegmentnode3
					)
					node_list = pexterncodeblocknode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction596
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexterncodeblocknode1 = nodearraylist2
					node_list = pexterncodeblocknode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction597
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tclassidnode3 = nodearraylist1
					assert tclassidnode3 isa nullable TClassid
					var ptypenode1: nullable AType = new AType.init_atype(
						null,
						tclassidnode3,
						listnode4,
						null
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction598
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwnullablenode2 = nodearraylist1
					assert tkwnullablenode2 isa nullable TKwnullable
					var tclassidnode3 = nodearraylist2
					assert tclassidnode3 isa nullable TClassid
					var ptypenode1: nullable AType = new AType.init_atype(
						tkwnullablenode2,
						tclassidnode3,
						listnode4,
						null
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction599
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tclassidnode3 = nodearraylist1
					assert tclassidnode3 isa nullable TClassid
					var pannotationsnode5 = nodearraylist2
					assert pannotationsnode5 isa nullable AAnnotations
					var ptypenode1: nullable AType = new AType.init_atype(
						null,
						tclassidnode3,
						listnode4,
						pannotationsnode5
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction600
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwnullablenode2 = nodearraylist1
					assert tkwnullablenode2 isa nullable TKwnullable
					var tclassidnode3 = nodearraylist2
					assert tclassidnode3 isa nullable TClassid
					var pannotationsnode5 = nodearraylist3
					assert pannotationsnode5 isa nullable AAnnotations
					var ptypenode1: nullable AType = new AType.init_atype(
						tkwnullablenode2,
						tclassidnode3,
						listnode4,
						pannotationsnode5
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction601
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tclassidnode3 = nodearraylist1
					assert tclassidnode3 isa nullable TClassid
					var listnode4 = nodearraylist4
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var ptypenode1: nullable AType = new AType.init_atype(
						null,
						tclassidnode3,
						listnode5,
						null
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction602
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tkwnullablenode2 = nodearraylist1
					assert tkwnullablenode2 isa nullable TKwnullable
					var tclassidnode3 = nodearraylist2
					assert tclassidnode3 isa nullable TClassid
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var ptypenode1: nullable AType = new AType.init_atype(
						tkwnullablenode2,
						tclassidnode3,
						listnode5,
						null
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction603
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tclassidnode3 = nodearraylist1
					assert tclassidnode3 isa nullable TClassid
					var listnode4 = nodearraylist4
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pannotationsnode6 = nodearraylist7
					assert pannotationsnode6 isa nullable AAnnotations
					var ptypenode1: nullable AType = new AType.init_atype(
						null,
						tclassidnode3,
						listnode5,
						pannotationsnode6
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction604
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tkwnullablenode2 = nodearraylist1
					assert tkwnullablenode2 isa nullable TKwnullable
					var tclassidnode3 = nodearraylist2
					assert tclassidnode3 isa nullable TClassid
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pannotationsnode6 = nodearraylist8
					assert pannotationsnode6 isa nullable AAnnotations
					var ptypenode1: nullable AType = new AType.init_atype(
						tkwnullablenode2,
						tclassidnode3,
						listnode5,
						pannotationsnode6
					)
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction605
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var ptypenode1 = nodearraylist1
					if ptypenode1 != null then
						listnode2.add(ptypenode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction606
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var ptypenode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if ptypenode1 != null then
						listnode3.add(ptypenode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction607
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var ptypenode1 = nodearraylist3
					node_list = ptypenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction609
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist2
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction610
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tkwendnode3 = nodearraylist2
					assert tkwendnode3 isa nullable TKwend
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode2,
						tkwendnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction611
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tkwendnode3 = nodearraylist1
					assert tkwendnode3 isa nullable TKwend
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode2,
						tkwendnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction612
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist1
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction613
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction614
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					if pexprnode2 != null then
						listnode4.add(pexprnode2)
					end
					listnode4 = concat(listnode4, listnode3)
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction615
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction616
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					if pexprnode2 != null then
						listnode4.add(pexprnode2)
					end
					listnode4 = concat(listnode4, listnode3)
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction617
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					var tkwendnode4 = nodearraylist3
					assert tkwendnode4 isa nullable TKwend
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode3,
						tkwendnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction618
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					if pexprnode2 != null then
						listnode4.add(pexprnode2)
					end
					listnode4 = concat(listnode4, listnode3)
					var tkwendnode5 = nodearraylist4
					assert tkwendnode5 isa nullable TKwend
					var pexprnode1: nullable ABlockExpr = new ABlockExpr.init_ablockexpr(
						listnode4,
						tkwendnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction622
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwreturnnode2 = nodearraylist1
					assert tkwreturnnode2 isa nullable TKwreturn
					var pexprnode1: nullable AReturnExpr = new AReturnExpr.init_areturnexpr(
						tkwreturnnode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction623
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwreturnnode2 = nodearraylist1
					assert tkwreturnnode2 isa nullable TKwreturn
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AReturnExpr = new AReturnExpr.init_areturnexpr(
						tkwreturnnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction624
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var pexprnode1: nullable ABreakExpr = new ABreakExpr.init_abreakexpr(
						tkwbreaknode2,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction625
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var plabelnode3 = nodearraylist2
					assert plabelnode3 isa nullable ALabel
					var pexprnode1: nullable ABreakExpr = new ABreakExpr.init_abreakexpr(
						tkwbreaknode2,
						plabelnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction626
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var pexprnode4 = nodearraylist2
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ABreakExpr = new ABreakExpr.init_abreakexpr(
						tkwbreaknode2,
						null,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction627
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var plabelnode3 = nodearraylist2
					assert plabelnode3 isa nullable ALabel
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable ABreakExpr = new ABreakExpr.init_abreakexpr(
						tkwbreaknode2,
						plabelnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction628
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwabortnode2 = nodearraylist1
					assert tkwabortnode2 isa nullable TKwabort
					var pexprnode1: nullable AAbortExpr = new AAbortExpr.init_aabortexpr(
						tkwabortnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction629
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwcontinuenode2 = nodearraylist1
					assert tkwcontinuenode2 isa nullable TKwcontinue
					var pexprnode1: nullable AContinueExpr = new AContinueExpr.init_acontinueexpr(
						tkwcontinuenode2,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction630
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwcontinuenode2 = nodearraylist1
					assert tkwcontinuenode2 isa nullable TKwcontinue
					var plabelnode3 = nodearraylist2
					assert plabelnode3 isa nullable ALabel
					var pexprnode1: nullable AContinueExpr = new AContinueExpr.init_acontinueexpr(
						tkwcontinuenode2,
						plabelnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction631
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwcontinuenode2 = nodearraylist1
					assert tkwcontinuenode2 isa nullable TKwcontinue
					var pexprnode4 = nodearraylist2
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AContinueExpr = new AContinueExpr.init_acontinueexpr(
						tkwcontinuenode2,
						null,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction632
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwcontinuenode2 = nodearraylist1
					assert tkwcontinuenode2 isa nullable TKwcontinue
					var plabelnode3 = nodearraylist2
					assert plabelnode3 isa nullable ALabel
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AContinueExpr = new AContinueExpr.init_acontinueexpr(
						tkwcontinuenode2,
						plabelnode3,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction639
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist4
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist5
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction640
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist1
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist2
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction641
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist5
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist6
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction642
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist6
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist7
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction644
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction645
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist3
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist4
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction647
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist4
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist5
					assert pexprsnode4 isa nullable AExprs
					var listnode5 = nodearraylist6
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction648
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist1
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist2
					assert pexprsnode4 isa nullable AExprs
					var listnode5 = nodearraylist3
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction649
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist5
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist6
					assert pexprsnode4 isa nullable AExprs
					var listnode5 = nodearraylist7
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction650
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist6
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist7
					assert pexprsnode4 isa nullable AExprs
					var listnode5 = nodearraylist8
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction652
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var listnode5 = nodearraylist4
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction653
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode6 = new Array[Object]
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist3
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist4
					assert pexprsnode4 isa nullable AExprs
					var listnode5 = nodearraylist5
					assert listnode5 isa Array[Object]
					listnode6 = concat(listnode6, listnode5)
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction655
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwsupernode3 = nodearraylist1
					assert tkwsupernode3 isa nullable TKwsuper
					var pexprsnode4 = nodearraylist2
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ASuperExpr = new ASuperExpr.init_asuperexpr(
						null,
						tkwsupernode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction656
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var tclassidnode4 = nodearraylist1
					assert tclassidnode4 isa nullable TClassid
					var pqualifiednode2: nullable AQualified = new AQualified.init_aqualified(
						listnode3,
						tclassidnode4
					)
					var tkwsupernode5 = nodearraylist2
					assert tkwsupernode5 isa nullable TKwsuper
					var pexprsnode6 = nodearraylist3
					assert pexprsnode6 isa nullable AExprs
					var pexprnode1: nullable ASuperExpr = new ASuperExpr.init_asuperexpr(
						pqualifiednode2,
						tkwsupernode5,
						pexprsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction657
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tclassidnode5 = nodearraylist2
					assert tclassidnode5 isa nullable TClassid
					var pqualifiednode2: nullable AQualified = new AQualified.init_aqualified(
						listnode4,
						tclassidnode5
					)
					var tkwsupernode6 = nodearraylist3
					assert tkwsupernode6 isa nullable TKwsuper
					var pexprsnode7 = nodearraylist4
					assert pexprsnode7 isa nullable AExprs
					var pexprnode1: nullable ASuperExpr = new ASuperExpr.init_asuperexpr(
						pqualifiednode2,
						tkwsupernode6,
						pexprsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction658
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pqualifiednode2: nullable AQualified = new AQualified.init_aqualified(
						listnode4,
						null
					)
					var tkwsupernode6 = nodearraylist2
					assert tkwsupernode6 isa nullable TKwsuper
					var pexprsnode7 = nodearraylist3
					assert pexprsnode7 isa nullable AExprs
					var pexprnode1: nullable ASuperExpr = new ASuperExpr.init_asuperexpr(
						pqualifiednode2,
						tkwsupernode6,
						pexprsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction659
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist4
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist5
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction660
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tkwinitnode3 = nodearraylist1
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist2
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction661
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist5
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist6
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction662
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist6
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist7
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction664
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tkwinitnode3 = nodearraylist2
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction665
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tkwinitnode3 = nodearraylist3
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist4
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction667
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwdebugnode2 = nodearraylist1
					assert tkwdebugnode2 isa nullable TKwdebug
					var tkwtypenode3 = nodearraylist2
					assert tkwtypenode3 isa nullable TKwtype
					var pexprnode4 = nodearraylist5
					assert pexprnode4 isa nullable AExpr
					var ptypenode5 = nodearraylist3
					assert ptypenode5 isa nullable AType
					var pexprnode1: nullable ADebugTypeExpr = new ADebugTypeExpr.init_adebugtypeexpr(
						tkwdebugnode2,
						tkwtypenode3,
						pexprnode4,
						ptypenode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction668
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwlabelnode2 = nodearraylist1
					assert tkwlabelnode2 isa nullable TKwlabel
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var plabelnode1: nullable ALabel = new ALabel.init_alabel(
						tkwlabelnode2,
						tidnode3
					)
					node_list = plabelnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction669
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pclosuredefnode1 = nodearraylist1
					if pclosuredefnode1 != null then
						listnode2.add(pclosuredefnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction670
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pclosuredefnode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if pclosuredefnode1 != null then
						listnode3.add(pclosuredefnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction671
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var tkwdonode5 = nodearraylist3
					assert tkwdonode5 isa nullable TKwdo
					var pexprnode6 = nodearraylist4
					assert pexprnode6 isa nullable AExpr
					var plabelnode7 = nodearraylist5
					assert plabelnode7 isa nullable ALabel
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode4,
						tkwdonode5,
						pexprnode6,
						plabelnode7
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction672
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tkwdonode6 = nodearraylist8
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist9
					assert pexprnode7 isa nullable AExpr
					var plabelnode8 = nodearraylist10
					assert plabelnode8 isa nullable ALabel
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						tkwdonode6,
						pexprnode7,
						plabelnode8
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction673
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist3
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tkwdonode6 = nodearraylist4
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist5
					assert pexprnode7 isa nullable AExpr
					var plabelnode8 = nodearraylist6
					assert plabelnode8 isa nullable ALabel
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						tkwdonode6,
						pexprnode7,
						plabelnode8
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction674
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var tkwdonode5 = nodearraylist3
					assert tkwdonode5 isa nullable TKwdo
					var pexprnode6 = nodearraylist4
					assert pexprnode6 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode4,
						tkwdonode5,
						pexprnode6,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction675
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tkwdonode6 = nodearraylist8
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist9
					assert pexprnode7 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						tkwdonode6,
						pexprnode7,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction676
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist3
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tkwdonode6 = nodearraylist4
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist5
					assert pexprnode7 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						tkwdonode6,
						pexprnode7,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction677
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var pexprnode6 = nodearraylist5
					assert pexprnode6 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode4,
						null,
						pexprnode6,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction678
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pexprnode7 = nodearraylist10
					assert pexprnode7 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						null,
						pexprnode7,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction679
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist3
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pexprnode7 = nodearraylist6
					assert pexprnode7 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						null,
						pexprnode7,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction680
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var tkwdonode5 = nodearraylist3
					assert tkwdonode5 isa nullable TKwdo
					var pexprnode6 = nodearraylist5
					assert pexprnode6 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode4,
						tkwdonode5,
						pexprnode6,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction681
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tkwdonode6 = nodearraylist8
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist10
					assert pexprnode7 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						tkwdonode6,
						pexprnode7,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction682
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist3
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tkwdonode6 = nodearraylist4
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist6
					assert pexprnode7 isa nullable AExpr
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						tkwdonode6,
						pexprnode7,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction683
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var tkwdonode5 = nodearraylist3
					assert tkwdonode5 isa nullable TKwdo
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode4,
						tkwdonode5,
						null,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction684
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tkwdonode6 = nodearraylist8
					assert tkwdonode6 isa nullable TKwdo
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						tkwdonode6,
						null,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction685
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tbangnode2 = nodearraylist1
					assert tbangnode2 isa nullable TBang
					var pclosureidnode3 = nodearraylist2
					assert pclosureidnode3 isa nullable AClosureId
					var listnode4 = nodearraylist3
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tkwdonode6 = nodearraylist4
					assert tkwdonode6 isa nullable TKwdo
					var pclosuredefnode1: nullable AClosureDef = new AClosureDef.init_aclosuredef(
						tbangnode2,
						pclosureidnode3,
						listnode5,
						tkwdonode6,
						null,
						null
					)
					node_list = pclosuredefnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction686
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var pclosureidnode1: nullable ASimpleClosureId = new ASimpleClosureId.init_asimpleclosureid(
						tidnode2
					)
					node_list = pclosureidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction687
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwbreaknode2 = nodearraylist1
					assert tkwbreaknode2 isa nullable TKwbreak
					var pclosureidnode1: nullable ABreakClosureId = new ABreakClosureId.init_abreakclosureid(
						tkwbreaknode2
					)
					node_list = pclosureidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction688
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode4 = nodearraylist1
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AContinueExpr = new AContinueExpr.init_acontinueexpr(
						null,
						null,
						pexprnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction689
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						null,
						null,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction690
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pannotationsnode7 = nodearraylist3
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						null,
						null,
						null,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction691
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist3
					assert ptypenode4 isa nullable AType
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						ptypenode4,
						null,
						null,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction692
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist4
					assert ptypenode4 isa nullable AType
					var pannotationsnode7 = nodearraylist3
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						ptypenode4,
						null,
						null,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction693
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var tassignnode5 = nodearraylist3
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist5
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						null,
						tassignnode5,
						pexprnode6,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction694
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var tassignnode5 = nodearraylist4
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pannotationsnode7 = nodearraylist3
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						null,
						tassignnode5,
						pexprnode6,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction695
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist3
					assert ptypenode4 isa nullable AType
					var tassignnode5 = nodearraylist4
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						ptypenode4,
						tassignnode5,
						pexprnode6,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction696
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwvarnode2 = nodearraylist1
					assert tkwvarnode2 isa nullable TKwvar
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var ptypenode4 = nodearraylist4
					assert ptypenode4 isa nullable AType
					var tassignnode5 = nodearraylist5
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist7
					assert pexprnode6 isa nullable AExpr
					var pannotationsnode7 = nodearraylist3
					assert pannotationsnode7 isa nullable AAnnotations
					var pexprnode1: nullable AVardeclExpr = new AVardeclExpr.init_avardeclexpr(
						tkwvarnode2,
						tidnode3,
						ptypenode4,
						tassignnode5,
						pexprnode6,
						pannotationsnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction697
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist4
					assert tattridnode3 isa nullable TAttrid
					var tassignnode4 = nodearraylist5
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrAssignExpr = new AAttrAssignExpr.init_aattrassignexpr(
						pexprnode2,
						tattridnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction698
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist1
					assert tattridnode3 isa nullable TAttrid
					var tassignnode4 = nodearraylist2
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist3
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrAssignExpr = new AAttrAssignExpr.init_aattrassignexpr(
						pexprnode2,
						tattridnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction699
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist5
					assert tattridnode3 isa nullable TAttrid
					var tassignnode4 = nodearraylist6
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrAssignExpr = new AAttrAssignExpr.init_aattrassignexpr(
						pexprnode2,
						tattridnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction700
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist6
					assert tattridnode3 isa nullable TAttrid
					var tassignnode4 = nodearraylist7
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist8
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrAssignExpr = new AAttrAssignExpr.init_aattrassignexpr(
						pexprnode2,
						tattridnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction702
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist2
					assert tattridnode3 isa nullable TAttrid
					var tassignnode4 = nodearraylist3
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrAssignExpr = new AAttrAssignExpr.init_aattrassignexpr(
						pexprnode2,
						tattridnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction703
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist3
					assert tattridnode3 isa nullable TAttrid
					var tassignnode4 = nodearraylist4
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist5
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrAssignExpr = new AAttrAssignExpr.init_aattrassignexpr(
						pexprnode2,
						tattridnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction705
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist4
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist5
					assert pexprsnode4 isa nullable AExprs
					var tassignnode5 = nodearraylist6
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist7
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						tassignnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction706
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist1
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist2
					assert pexprsnode4 isa nullable AExprs
					var tassignnode5 = nodearraylist3
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist4
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						tassignnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction707
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist5
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist6
					assert pexprsnode4 isa nullable AExprs
					var tassignnode5 = nodearraylist7
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist8
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						tassignnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction708
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist6
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist7
					assert pexprsnode4 isa nullable AExprs
					var tassignnode5 = nodearraylist8
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist9
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						tassignnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction710
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var tassignnode5 = nodearraylist4
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist5
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						tassignnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction711
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist3
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist4
					assert pexprsnode4 isa nullable AExprs
					var tassignnode5 = nodearraylist5
					assert tassignnode5 isa nullable TAssign
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallAssignExpr = new ACallAssignExpr.init_acallassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						tassignnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction713
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprsnode3 = nodearraylist2
					assert pexprsnode3 isa nullable AExprs
					var tassignnode4 = nodearraylist3
					assert tassignnode4 isa nullable TAssign
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable ABraAssignExpr = new ABraAssignExpr.init_abraassignexpr(
						pexprnode2,
						pexprsnode3,
						tassignnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction714
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist4
					assert tattridnode3 isa nullable TAttrid
					var passignopnode4 = nodearraylist5
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrReassignExpr = new AAttrReassignExpr.init_aattrreassignexpr(
						pexprnode2,
						tattridnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction715
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist1
					assert tattridnode3 isa nullable TAttrid
					var passignopnode4 = nodearraylist2
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist3
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrReassignExpr = new AAttrReassignExpr.init_aattrreassignexpr(
						pexprnode2,
						tattridnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction716
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist5
					assert tattridnode3 isa nullable TAttrid
					var passignopnode4 = nodearraylist6
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrReassignExpr = new AAttrReassignExpr.init_aattrreassignexpr(
						pexprnode2,
						tattridnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction717
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist6
					assert tattridnode3 isa nullable TAttrid
					var passignopnode4 = nodearraylist7
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist8
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrReassignExpr = new AAttrReassignExpr.init_aattrreassignexpr(
						pexprnode2,
						tattridnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction719
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist2
					assert tattridnode3 isa nullable TAttrid
					var passignopnode4 = nodearraylist3
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrReassignExpr = new AAttrReassignExpr.init_aattrreassignexpr(
						pexprnode2,
						tattridnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction720
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist3
					assert tattridnode3 isa nullable TAttrid
					var passignopnode4 = nodearraylist4
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist5
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAttrReassignExpr = new AAttrReassignExpr.init_aattrreassignexpr(
						pexprnode2,
						tattridnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction722
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist4
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist5
					assert pexprsnode4 isa nullable AExprs
					var passignopnode5 = nodearraylist6
					assert passignopnode5 isa nullable AAssignOp
					var pexprnode6 = nodearraylist7
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						passignopnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction723
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist1
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist2
					assert pexprsnode4 isa nullable AExprs
					var passignopnode5 = nodearraylist3
					assert passignopnode5 isa nullable AAssignOp
					var pexprnode6 = nodearraylist4
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						passignopnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction724
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist5
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist6
					assert pexprsnode4 isa nullable AExprs
					var passignopnode5 = nodearraylist7
					assert passignopnode5 isa nullable AAssignOp
					var pexprnode6 = nodearraylist8
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						passignopnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction725
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist6
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist7
					assert pexprsnode4 isa nullable AExprs
					var passignopnode5 = nodearraylist8
					assert passignopnode5 isa nullable AAssignOp
					var pexprnode6 = nodearraylist9
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						passignopnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction727
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var passignopnode5 = nodearraylist4
					assert passignopnode5 isa nullable AAssignOp
					var pexprnode6 = nodearraylist5
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						passignopnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction728
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tidnode3 = nodearraylist3
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist4
					assert pexprsnode4 isa nullable AExprs
					var passignopnode5 = nodearraylist5
					assert passignopnode5 isa nullable AAssignOp
					var pexprnode6 = nodearraylist6
					assert pexprnode6 isa nullable AExpr
					var pexprnode1: nullable ACallReassignExpr = new ACallReassignExpr.init_acallreassignexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						passignopnode5,
						pexprnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction730
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprsnode3 = nodearraylist2
					assert pexprsnode3 isa nullable AExprs
					var passignopnode4 = nodearraylist3
					assert passignopnode4 isa nullable AAssignOp
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable ABraReassignExpr = new ABraReassignExpr.init_abrareassignexpr(
						pexprnode2,
						pexprsnode3,
						passignopnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction731
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tpluseqnode2 = nodearraylist1
					assert tpluseqnode2 isa nullable TPluseq
					var passignopnode1: nullable APlusAssignOp = new APlusAssignOp.init_aplusassignop(
						tpluseqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction732
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tminuseqnode2 = nodearraylist1
					assert tminuseqnode2 isa nullable TMinuseq
					var passignopnode1: nullable AMinusAssignOp = new AMinusAssignOp.init_aminusassignop(
						tminuseqnode2
					)
					node_list = passignopnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction733
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwdonode2 = nodearraylist1
					assert tkwdonode2 isa nullable TKwdo
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var plabelnode4 = nodearraylist3
					assert plabelnode4 isa nullable ALabel
					var pexprnode1: nullable ADoExpr = new ADoExpr.init_adoexpr(
						tkwdonode2,
						pexprnode3,
						plabelnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction734
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwdonode2 = nodearraylist1
					assert tkwdonode2 isa nullable TKwdo
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ADoExpr = new ADoExpr.init_adoexpr(
						tkwdonode2,
						pexprnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction735
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode4 = nodearraylist6
					assert pexprnode4 isa nullable AExpr
					var pexprnode5 = nodearraylist8
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						pexprnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction736
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode4 = nodearraylist6
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						pexprnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction737
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode4 = nodearraylist7
					assert pexprnode4 isa nullable AExpr
					var pexprnode5 = nodearraylist8
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						pexprnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction738
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						null,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction739
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AIfExpr = new AIfExpr.init_aifexpr(
						tkwifnode2,
						pexprnode3,
						null,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction742
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwloopnode2 = nodearraylist1
					assert tkwloopnode2 isa nullable TKwloop
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var plabelnode4 = nodearraylist3
					assert plabelnode4 isa nullable ALabel
					var pexprnode1: nullable ALoopExpr = new ALoopExpr.init_aloopexpr(
						tkwloopnode2,
						pexprnode3,
						plabelnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction743
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwloopnode2 = nodearraylist1
					assert tkwloopnode2 isa nullable TKwloop
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ALoopExpr = new ALoopExpr.init_aloopexpr(
						tkwloopnode2,
						pexprnode3,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction744
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwwhilenode2 = nodearraylist1
					assert tkwwhilenode2 isa nullable TKwwhile
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwdonode4 = nodearraylist5
					assert tkwdonode4 isa nullable TKwdo
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var plabelnode6 = nodearraylist7
					assert plabelnode6 isa nullable ALabel
					var pexprnode1: nullable AWhileExpr = new AWhileExpr.init_awhileexpr(
						tkwwhilenode2,
						pexprnode3,
						tkwdonode4,
						pexprnode5,
						plabelnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction745
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwwhilenode2 = nodearraylist1
					assert tkwwhilenode2 isa nullable TKwwhile
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwdonode4 = nodearraylist5
					assert tkwdonode4 isa nullable TKwdo
					var pexprnode5 = nodearraylist6
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AWhileExpr = new AWhileExpr.init_awhileexpr(
						tkwwhilenode2,
						pexprnode3,
						tkwdonode4,
						pexprnode5,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction746
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist15 = p.pop
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwfornode2 = nodearraylist1
					assert tkwfornode2 isa nullable TKwfor
					var listnode3 = nodearraylist5
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pexprnode5 = nodearraylist11
					assert pexprnode5 isa nullable AExpr
					var tkwdonode6 = nodearraylist13
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist14
					assert pexprnode7 isa nullable AExpr
					var plabelnode8 = nodearraylist15
					assert plabelnode8 isa nullable ALabel
					var pexprnode1: nullable AForExpr = new AForExpr.init_aforexpr(
						tkwfornode2,
						listnode4,
						pexprnode5,
						tkwdonode6,
						pexprnode7,
						plabelnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction747
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwfornode2 = nodearraylist1
					assert tkwfornode2 isa nullable TKwfor
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var tkwdonode6 = nodearraylist9
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist10
					assert pexprnode7 isa nullable AExpr
					var plabelnode8 = nodearraylist11
					assert plabelnode8 isa nullable ALabel
					var pexprnode1: nullable AForExpr = new AForExpr.init_aforexpr(
						tkwfornode2,
						listnode4,
						pexprnode5,
						tkwdonode6,
						pexprnode7,
						plabelnode8
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction748
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist14 = p.pop
					var nodearraylist13 = p.pop
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwfornode2 = nodearraylist1
					assert tkwfornode2 isa nullable TKwfor
					var listnode3 = nodearraylist5
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pexprnode5 = nodearraylist11
					assert pexprnode5 isa nullable AExpr
					var tkwdonode6 = nodearraylist13
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist14
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AForExpr = new AForExpr.init_aforexpr(
						tkwfornode2,
						listnode4,
						pexprnode5,
						tkwdonode6,
						pexprnode7,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction749
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tkwfornode2 = nodearraylist1
					assert tkwfornode2 isa nullable TKwfor
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var tkwdonode6 = nodearraylist9
					assert tkwdonode6 isa nullable TKwdo
					var pexprnode7 = nodearraylist10
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AForExpr = new AForExpr.init_aforexpr(
						tkwfornode2,
						listnode4,
						pexprnode5,
						tkwdonode6,
						pexprnode7,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction750
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwassertnode2 = nodearraylist1
					assert tkwassertnode2 isa nullable TKwassert
					var pexprnode4 = nodearraylist2
					assert pexprnode4 isa nullable AExpr
					var pexprnode5 = nodearraylist4
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAssertExpr = new AAssertExpr.init_aassertexpr(
						tkwassertnode2,
						null,
						pexprnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction751
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwassertnode2 = nodearraylist1
					assert tkwassertnode2 isa nullable TKwassert
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					var pexprnode5 = nodearraylist5
					assert pexprnode5 isa nullable AExpr
					var pexprnode1: nullable AAssertExpr = new AAssertExpr.init_aassertexpr(
						tkwassertnode2,
						tidnode3,
						pexprnode4,
						pexprnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction752
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwassertnode2 = nodearraylist1
					assert tkwassertnode2 isa nullable TKwassert
					var pexprnode4 = nodearraylist2
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AAssertExpr = new AAssertExpr.init_aassertexpr(
						tkwassertnode2,
						null,
						pexprnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction753
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwassertnode2 = nodearraylist1
					assert tkwassertnode2 isa nullable TKwassert
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					var pexprnode1: nullable AAssertExpr = new AAssertExpr.init_aassertexpr(
						tkwassertnode2,
						tidnode3,
						pexprnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction754
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode1 = nodearraylist1
					node_list = tidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction764
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprsnode3 = nodearraylist2
					assert pexprsnode3 isa nullable AExprs
					var listnode4 = nodearraylist3
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pexprnode1: nullable ABraExpr = new ABraExpr.init_abraexpr(
						pexprnode2,
						pexprsnode3,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction766
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwifnode2 = nodearraylist1
					assert tkwifnode2 isa nullable TKwif
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tkwthennode4 = nodearraylist5
					assert tkwthennode4 isa nullable TKwthen
					var pexprnode5 = nodearraylist7
					assert pexprnode5 isa nullable AExpr
					var tkwelsenode6 = nodearraylist9
					assert tkwelsenode6 isa nullable TKwelse
					var pexprnode7 = nodearraylist11
					assert pexprnode7 isa nullable AExpr
					var pexprnode1: nullable AIfexprExpr = new AIfexprExpr.init_aifexprexpr(
						tkwifnode2,
						pexprnode3,
						tkwthennode4,
						pexprnode5,
						tkwelsenode6,
						pexprnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction768
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AOrExpr = new AOrExpr.init_aorexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction769
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AAndExpr = new AAndExpr.init_aandexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction770
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist5
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AOrElseExpr = new AOrElseExpr.init_aorelseexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction771
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AImpliesExpr = new AImpliesExpr.init_aimpliesexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction773
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnotnode2 = nodearraylist1
					assert tkwnotnode2 isa nullable TKwnot
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ANotExpr = new ANotExpr.init_anotexpr(
						tkwnotnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction775
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AEqExpr = new AEqExpr.init_aeqexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction776
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AEeExpr = new AEeExpr.init_aeeexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction777
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ANeExpr = new ANeExpr.init_aneexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction778
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ALtExpr = new ALtExpr.init_altexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction779
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ALeExpr = new ALeExpr.init_aleexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction780
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ALlExpr = new ALlExpr.init_allexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction781
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AGtExpr = new AGtExpr.init_agtexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction782
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AGeExpr = new AGeExpr.init_ageexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction783
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AGgExpr = new AGgExpr.init_aggexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction784
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AStarshipExpr = new AStarshipExpr.init_astarshipexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction785
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var ptypenode3 = nodearraylist4
					assert ptypenode3 isa nullable AType
					var pexprnode1: nullable AIsaExpr = new AIsaExpr.init_aisaexpr(
						pexprnode2,
						ptypenode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction787
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable APlusExpr = new APlusExpr.init_aplusexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction788
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AMinusExpr = new AMinusExpr.init_aminusexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction790
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AStarExpr = new AStarExpr.init_astarexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction791
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable ASlashExpr = new ASlashExpr.init_aslashexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction792
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprnode3 = nodearraylist4
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable APercentExpr = new APercentExpr.init_apercentexpr(
						pexprnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction794
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tminusnode2 = nodearraylist1
					assert tminusnode2 isa nullable TMinus
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AUminusExpr = new AUminusExpr.init_auminusexpr(
						tminusnode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction795
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwoncenode2 = nodearraylist1
					assert tkwoncenode2 isa nullable TKwonce
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode1: nullable AOnceExpr = new AOnceExpr.init_aonceexpr(
						tkwoncenode2,
						pexprnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction797
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var pexprsnode5 = nodearraylist4
					assert pexprsnode5 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						null,
						pexprsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction798
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var tattridnode4 = nodearraylist5
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction799
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode4 = nodearraylist2
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction800
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var tattridnode4 = nodearraylist6
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction801
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var tattridnode4 = nodearraylist7
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction803
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode4 = nodearraylist3
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction804
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode4 = nodearraylist4
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction806
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist4
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction807
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist1
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction808
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist5
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction809
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist6
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction811
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist2
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction812
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					var tattridnode3 = nodearraylist3
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction828
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var pexprsnode3 = nodearraylist2
					assert pexprsnode3 isa nullable AExprs
					var pexprnode1: nullable ABraExpr = new ABraExpr.init_abraexpr(
						pexprnode2,
						pexprsnode3,
						listnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction829
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var tidnode4 = nodearraylist6
					assert tidnode4 isa nullable TId
					var pexprsnode5 = nodearraylist7
					assert pexprsnode5 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						tidnode4,
						pexprsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction830
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var tidnode4 = nodearraylist7
					assert tidnode4 isa nullable TId
					var pexprsnode5 = nodearraylist8
					assert pexprsnode5 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						tidnode4,
						pexprsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction831
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnewnode2 = nodearraylist1
					assert tkwnewnode2 isa nullable TKwnew
					var ptypenode3 = nodearraylist3
					assert ptypenode3 isa nullable AType
					var tidnode4 = nodearraylist8
					assert tidnode4 isa nullable TId
					var pexprsnode5 = nodearraylist9
					assert pexprsnode5 isa nullable AExprs
					var pexprnode1: nullable ANewExpr = new ANewExpr.init_anewexpr(
						tkwnewnode2,
						ptypenode3,
						tidnode4,
						pexprsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction833
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode4 = nodearraylist7
					assert pexprnode4 isa nullable AExpr
					var tcbranode5 = nodearraylist9
					assert tcbranode5 isa nullable TCbra
					var pexprnode1: nullable ACrangeExpr = new ACrangeExpr.init_acrangeexpr(
						tobranode2,
						pexprnode3,
						pexprnode4,
						tcbranode5,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction834
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode4 = nodearraylist7
					assert pexprnode4 isa nullable AExpr
					var tcbranode5 = nodearraylist9
					assert tcbranode5 isa nullable TCbra
					var pannotationsnode6 = nodearraylist10
					assert pannotationsnode6 isa nullable AAnnotations
					var pexprnode1: nullable ACrangeExpr = new ACrangeExpr.init_acrangeexpr(
						tobranode2,
						pexprnode3,
						pexprnode4,
						tcbranode5,
						pannotationsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction835
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode4 = nodearraylist7
					assert pexprnode4 isa nullable AExpr
					var tobranode5 = nodearraylist9
					assert tobranode5 isa nullable TObra
					var pexprnode1: nullable AOrangeExpr = new AOrangeExpr.init_aorangeexpr(
						tobranode2,
						pexprnode3,
						pexprnode4,
						tobranode5,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction836
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var pexprnode4 = nodearraylist7
					assert pexprnode4 isa nullable AExpr
					var tobranode5 = nodearraylist9
					assert tobranode5 isa nullable TObra
					var pannotationsnode6 = nodearraylist10
					assert pannotationsnode6 isa nullable AAnnotations
					var pexprnode1: nullable AOrangeExpr = new AOrangeExpr.init_aorangeexpr(
						tobranode2,
						pexprnode3,
						pexprnode4,
						tobranode5,
						pannotationsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction837
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprsnode2 = nodearraylist1
					assert pexprsnode2 isa nullable AExprs
					var pexprnode1: nullable AArrayExpr = new AArrayExpr.init_aarrayexpr(
						pexprsnode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction838
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprsnode2 = nodearraylist1
					assert pexprsnode2 isa nullable AExprs
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AArrayExpr = new AArrayExpr.init_aarrayexpr(
						pexprsnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction839
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwselfnode2 = nodearraylist1
					assert tkwselfnode2 isa nullable TKwself
					var pexprnode1: nullable ASelfExpr = new ASelfExpr.init_aselfexpr(
						tkwselfnode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction840
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwselfnode2 = nodearraylist1
					assert tkwselfnode2 isa nullable TKwself
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable ASelfExpr = new ASelfExpr.init_aselfexpr(
						tkwselfnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction841
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwtruenode2 = nodearraylist1
					assert tkwtruenode2 isa nullable TKwtrue
					var pexprnode1: nullable ATrueExpr = new ATrueExpr.init_atrueexpr(
						tkwtruenode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction842
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwtruenode2 = nodearraylist1
					assert tkwtruenode2 isa nullable TKwtrue
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable ATrueExpr = new ATrueExpr.init_atrueexpr(
						tkwtruenode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction843
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwfalsenode2 = nodearraylist1
					assert tkwfalsenode2 isa nullable TKwfalse
					var pexprnode1: nullable AFalseExpr = new AFalseExpr.init_afalseexpr(
						tkwfalsenode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction844
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwfalsenode2 = nodearraylist1
					assert tkwfalsenode2 isa nullable TKwfalse
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AFalseExpr = new AFalseExpr.init_afalseexpr(
						tkwfalsenode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction845
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwnullnode2 = nodearraylist1
					assert tkwnullnode2 isa nullable TKwnull
					var pexprnode1: nullable ANullExpr = new ANullExpr.init_anullexpr(
						tkwnullnode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction846
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwnullnode2 = nodearraylist1
					assert tkwnullnode2 isa nullable TKwnull
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable ANullExpr = new ANullExpr.init_anullexpr(
						tkwnullnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction847
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tnumbernode2 = nodearraylist1
					assert tnumbernode2 isa nullable TNumber
					var pexprnode1: nullable AIntExpr = new AIntExpr.init_aintexpr(
						tnumbernode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction848
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tnumbernode2 = nodearraylist1
					assert tnumbernode2 isa nullable TNumber
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AIntExpr = new AIntExpr.init_aintexpr(
						tnumbernode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction849
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tfloatnode2 = nodearraylist1
					assert tfloatnode2 isa nullable TFloat
					var pexprnode1: nullable AFloatExpr = new AFloatExpr.init_afloatexpr(
						tfloatnode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction850
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tfloatnode2 = nodearraylist1
					assert tfloatnode2 isa nullable TFloat
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AFloatExpr = new AFloatExpr.init_afloatexpr(
						tfloatnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction851
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tcharnode2 = nodearraylist1
					assert tcharnode2 isa nullable TChar
					var pexprnode1: nullable ACharExpr = new ACharExpr.init_acharexpr(
						tcharnode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction852
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tcharnode2 = nodearraylist1
					assert tcharnode2 isa nullable TChar
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable ACharExpr = new ACharExpr.init_acharexpr(
						tcharnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction853
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstringnode2 = nodearraylist1
					assert tstringnode2 isa nullable TString
					var pexprnode1: nullable AStringExpr = new AStringExpr.init_astringexpr(
						tstringnode2,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction854
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tstringnode2 = nodearraylist1
					assert tstringnode2 isa nullable TString
					var pannotationsnode3 = nodearraylist2
					assert pannotationsnode3 isa nullable AAnnotations
					var pexprnode1: nullable AStringExpr = new AStringExpr.init_astringexpr(
						tstringnode2,
						pannotationsnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction856
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tcparnode4 = nodearraylist5
					assert tcparnode4 isa nullable TCpar
					var pexprnode1: nullable AParExpr = new AParExpr.init_aparexpr(
						toparnode2,
						pexprnode3,
						tcparnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction857
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var pexprnode3 = nodearraylist3
					assert pexprnode3 isa nullable AExpr
					var tcparnode4 = nodearraylist5
					assert tcparnode4 isa nullable TCpar
					var pannotationsnode5 = nodearraylist6
					assert pannotationsnode5 isa nullable AAnnotations
					var pexprnode1: nullable AParExpr = new AParExpr.init_aparexpr(
						toparnode2,
						pexprnode3,
						tcparnode4,
						pannotationsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction858
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwasnode3 = nodearraylist4
					assert tkwasnode3 isa nullable TKwas
					var toparnode4 = nodearraylist6
					assert toparnode4 isa nullable TOpar
					var ptypenode5 = nodearraylist8
					assert ptypenode5 isa nullable AType
					var tcparnode6 = nodearraylist10
					assert tcparnode6 isa nullable TCpar
					var pexprnode1: nullable AAsCastExpr = new AAsCastExpr.init_aascastexpr(
						pexprnode2,
						tkwasnode3,
						toparnode4,
						ptypenode5,
						tcparnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction859
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist12 = p.pop
					var nodearraylist11 = p.pop
					var nodearraylist10 = p.pop
					var nodearraylist9 = p.pop
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwasnode3 = nodearraylist4
					assert tkwasnode3 isa nullable TKwas
					var toparnode4 = nodearraylist6
					assert toparnode4 isa nullable TOpar
					var tkwnotnode5 = nodearraylist8
					assert tkwnotnode5 isa nullable TKwnot
					var tkwnullnode6 = nodearraylist10
					assert tkwnullnode6 isa nullable TKwnull
					var tcparnode7 = nodearraylist12
					assert tcparnode7 isa nullable TCpar
					var pexprnode1: nullable AAsNotnullExpr = new AAsNotnullExpr.init_aasnotnullexpr(
						pexprnode2,
						tkwasnode3,
						toparnode4,
						tkwnotnode5,
						tkwnullnode6,
						tcparnode7
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction860
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					listnode4 = concat(listnode4, listnode2)
					if pexprnode3 != null then
						listnode4.add(pexprnode3)
					end
					var pexprnode1: nullable ASuperstringExpr = new ASuperstringExpr.init_asuperstringexpr(
						listnode4,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction861
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					listnode5 = concat(listnode5, listnode2)
					listnode5 = concat(listnode5, listnode3)
					if pexprnode4 != null then
						listnode5.add(pexprnode4)
					end
					var pexprnode1: nullable ASuperstringExpr = new ASuperstringExpr.init_asuperstringexpr(
						listnode5,
						null
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction862
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					listnode4 = concat(listnode4, listnode2)
					if pexprnode3 != null then
						listnode4.add(pexprnode3)
					end
					var pannotationsnode5 = nodearraylist3
					assert pannotationsnode5 isa nullable AAnnotations
					var pexprnode1: nullable ASuperstringExpr = new ASuperstringExpr.init_asuperstringexpr(
						listnode4,
						pannotationsnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction863
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					var listnode3 = nodearraylist2
					assert listnode3 isa Array[Object]
					var pexprnode4 = nodearraylist3
					assert pexprnode4 isa nullable AExpr
					listnode5 = concat(listnode5, listnode2)
					listnode5 = concat(listnode5, listnode3)
					if pexprnode4 != null then
						listnode5.add(pexprnode4)
					end
					var pannotationsnode6 = nodearraylist4
					assert pannotationsnode6 isa nullable AAnnotations
					var pexprnode1: nullable ASuperstringExpr = new ASuperstringExpr.init_asuperstringexpr(
						listnode5,
						pannotationsnode6
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction864
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode1 = nodearraylist1
					var pexprnode2 = nodearraylist3
					if pexprnode1 != null then
						listnode3.add(pexprnode1)
					end
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction865
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tstartstringnode2 = nodearraylist1
					assert tstartstringnode2 isa nullable TStartString
					var pexprnode1: nullable AStartStringExpr = new AStartStringExpr.init_astartstringexpr(
						tstartstringnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction867
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tmidstringnode2 = nodearraylist1
					assert tmidstringnode2 isa nullable TMidString
					var pexprnode1: nullable AMidStringExpr = new AMidStringExpr.init_amidstringexpr(
						tmidstringnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction868
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tendstringnode2 = nodearraylist1
					assert tendstringnode2 isa nullable TEndString
					var pexprnode1: nullable AEndStringExpr = new AEndStringExpr.init_aendstringexpr(
						tendstringnode2
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction869
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tatnode2 = nodearraylist1
					assert tatnode2 isa nullable TAt
					var pannotationnode4 = nodearraylist2
					assert pannotationnode4 isa nullable AAnnotation
					if pannotationnode4 != null then
						listnode5.add(pannotationnode4)
					end
					var pannotationsnode1: nullable AAnnotations = new AAnnotations.init_aannotations(
						tatnode2,
						null,
						listnode5,
						null
					)
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction870
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var tatnode2 = nodearraylist1
					assert tatnode2 isa nullable TAt
					var toparnode3 = nodearraylist2
					assert toparnode3 isa nullable TOpar
					var listnode4 = nodearraylist4
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tcparnode6 = nodearraylist6
					assert tcparnode6 isa nullable TCpar
					var pannotationsnode1: nullable AAnnotations = new AAnnotations.init_aannotations(
						tatnode2,
						toparnode3,
						listnode5,
						tcparnode6
					)
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction871
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var patidnode2 = nodearraylist1
					assert patidnode2 isa nullable AAtid
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						null,
						listnode4,
						null,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction872
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var patidnode2 = nodearraylist1
					assert patidnode2 isa nullable AAtid
					var pannotationsnode6 = nodearraylist2
					assert pannotationsnode6 isa nullable AAnnotations
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						null,
						listnode4,
						null,
						pannotationsnode6
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction873
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var patidnode2 = nodearraylist1
					assert patidnode2 isa nullable AAtid
					var toparnode3 = nodearraylist2
					assert toparnode3 isa nullable TOpar
					var listnode4 = nodearraylist4
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tcparnode6 = nodearraylist6
					assert tcparnode6 isa nullable TCpar
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						toparnode3,
						listnode5,
						tcparnode6,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction874
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var patidnode2 = nodearraylist1
					assert patidnode2 isa nullable AAtid
					var toparnode3 = nodearraylist2
					assert toparnode3 isa nullable TOpar
					var listnode4 = nodearraylist4
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tcparnode6 = nodearraylist6
					assert tcparnode6 isa nullable TCpar
					var pannotationsnode7 = nodearraylist7
					assert pannotationsnode7 isa nullable AAnnotations
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						toparnode3,
						listnode5,
						tcparnode6,
						pannotationsnode7
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction875
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var listnode4 = nodearraylist1
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pannotationsnode1: nullable AAnnotations = new AAnnotations.init_aannotations(
						null,
						null,
						listnode5,
						null
					)
					node_list = pannotationsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction876
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pannotationnode1 = nodearraylist1
					if pannotationnode1 != null then
						listnode2.add(pannotationnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction877
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pannotationnode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if pannotationnode1 != null then
						listnode3.add(pannotationnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction879
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var patidnode2 = nodearraylist2
					assert patidnode2 isa nullable AAtid
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						null,
						listnode4,
						null,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction880
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var patidnode2 = nodearraylist2
					assert patidnode2 isa nullable AAtid
					var pannotationsnode6 = nodearraylist3
					assert pannotationsnode6 isa nullable AAnnotations
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						null,
						listnode4,
						null,
						pannotationsnode6
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction881
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var patidnode2 = nodearraylist2
					assert patidnode2 isa nullable AAtid
					var toparnode3 = nodearraylist3
					assert toparnode3 isa nullable TOpar
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tcparnode6 = nodearraylist6
					assert tcparnode6 isa nullable TCpar
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						toparnode3,
						listnode5,
						tcparnode6,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction882
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist8 = p.pop
					var nodearraylist7 = p.pop
					var nodearraylist6 = p.pop
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var patidnode2 = nodearraylist2
					assert patidnode2 isa nullable AAtid
					var toparnode3 = nodearraylist3
					assert toparnode3 isa nullable TOpar
					var listnode4 = nodearraylist5
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var tcparnode6 = nodearraylist6
					assert tcparnode6 isa nullable TCpar
					var pannotationsnode7 = nodearraylist7
					assert pannotationsnode7 isa nullable AAnnotations
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						toparnode3,
						listnode5,
						tcparnode6,
						pannotationsnode7
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction883
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var patidnode2 = nodearraylist2
					assert patidnode2 isa nullable AAtid
					var listnode4 = nodearraylist3
					assert listnode4 isa Array[Object]
					listnode5 = concat(listnode5, listnode4)
					var pannotationnode1: nullable AAnnotation = new AAnnotation.init_aannotation(
						patidnode2,
						null,
						listnode5,
						null,
						null
					)
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction884
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pannotationnode1 = nodearraylist3
					node_list = pannotationnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction885
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var patargnode1 = nodearraylist1
					if patargnode1 != null then
						listnode2.add(patargnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction886
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var patargnode1 = nodearraylist1
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					if patargnode1 != null then
						listnode3.add(patargnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction887
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var patargnode1 = nodearraylist3
					node_list = patargnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction888
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var ptypenode2 = nodearraylist1
					assert ptypenode2 isa nullable AType
					var patargnode1: nullable ATypeAtArg = new ATypeAtArg.init_atypeatarg(
						ptypenode2
					)
					node_list = patargnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction889
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var patargnode1: nullable AExprAtArg = new AExprAtArg.init_aexpratarg(
						pexprnode2
					)
					node_list = patargnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction891
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pannotationsnode2 = nodearraylist1
					assert pannotationsnode2 isa nullable AAnnotations
					var patargnode1: nullable AAtAtArg = new AAtAtArg.init_aatatarg(
						pannotationsnode2
					)
					node_list = patargnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction892
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist1
					assert tidnode2 isa nullable TId
					var patidnode1: nullable AIdAtid = new AIdAtid.init_aidatid(
						tidnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction893
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist2
					assert tidnode2 isa nullable TId
					var patidnode1: nullable AIdAtid = new AIdAtid.init_aidatid(
						tidnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction894
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode2 = nodearraylist3
					assert tidnode2 isa nullable TId
					var patidnode1: nullable AIdAtid = new AIdAtid.init_aidatid(
						tidnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction896
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwreadablenode2 = nodearraylist1
					assert tkwreadablenode2 isa nullable TKwreadable
					var patidnode1: nullable AKwreadableAtid = new AKwreadableAtid.init_akwreadableatid(
						tkwreadablenode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction897
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwreadablenode2 = nodearraylist2
					assert tkwreadablenode2 isa nullable TKwreadable
					var patidnode1: nullable AKwreadableAtid = new AKwreadableAtid.init_akwreadableatid(
						tkwreadablenode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction898
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwreadablenode2 = nodearraylist3
					assert tkwreadablenode2 isa nullable TKwreadable
					var patidnode1: nullable AKwreadableAtid = new AKwreadableAtid.init_akwreadableatid(
						tkwreadablenode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction900
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwwritablenode2 = nodearraylist1
					assert tkwwritablenode2 isa nullable TKwwritable
					var patidnode1: nullable AKwwritableAtid = new AKwwritableAtid.init_akwwritableatid(
						tkwwritablenode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction901
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwwritablenode2 = nodearraylist2
					assert tkwwritablenode2 isa nullable TKwwritable
					var patidnode1: nullable AKwwritableAtid = new AKwwritableAtid.init_akwwritableatid(
						tkwwritablenode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction902
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwwritablenode2 = nodearraylist3
					assert tkwwritablenode2 isa nullable TKwwritable
					var patidnode1: nullable AKwwritableAtid = new AKwwritableAtid.init_akwwritableatid(
						tkwwritablenode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction904
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var tkwimportnode2 = nodearraylist1
					assert tkwimportnode2 isa nullable TKwimport
					var patidnode1: nullable AKwimportAtid = new AKwimportAtid.init_akwimportatid(
						tkwimportnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction905
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwimportnode2 = nodearraylist2
					assert tkwimportnode2 isa nullable TKwimport
					var patidnode1: nullable AKwimportAtid = new AKwimportAtid.init_akwimportatid(
						tkwimportnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction906
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwimportnode2 = nodearraylist3
					assert tkwimportnode2 isa nullable TKwimport
					var patidnode1: nullable AKwimportAtid = new AKwimportAtid.init_akwimportatid(
						tkwimportnode2
					)
					node_list = patidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction908
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcparnode5 = nodearraylist4
					assert tcparnode5 isa nullable TCpar
					var pexprsnode1: nullable AParExprs = new AParExprs.init_aparexprs(
						toparnode2,
						listnode4,
						tcparnode5
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction909
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var toparnode2 = nodearraylist1
					assert toparnode2 isa nullable TOpar
					var tcparnode4 = nodearraylist3
					assert tcparnode4 isa nullable TCpar
					var pexprsnode1: nullable AParExprs = new AParExprs.init_aparexprs(
						toparnode2,
						listnode3,
						tcparnode4
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction910
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var listnode2 = new Array[Object]
					var pexprsnode1: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode2
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction912
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					var pexprsnode1: nullable AListExprs = new AListExprs.init_alistexprs(
						listnode3
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction915
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tobranode2 = nodearraylist1
					assert tobranode2 isa nullable TObra
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tcbranode5 = nodearraylist4
					assert tcbranode5 isa nullable TCbra
					var pexprsnode1: nullable ABraExprs = new ABraExprs.init_abraexprs(
						tobranode2,
						listnode4,
						tcbranode5
					)
					node_list = pexprsnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction916
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pexprnode1 = nodearraylist1
					if pexprnode1 != null then
						listnode2.add(pexprnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction917
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var pexprnode1 = nodearraylist1
					var listnode2 = nodearraylist3
					assert listnode2 isa Array[Object]
					if pexprnode1 != null then
						listnode3.add(pexprnode1)
					end
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction918
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist3
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction919
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tidnode1 = nodearraylist1
					if tidnode1 != null then
						listnode2.add(tidnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction920
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist5 = p.pop
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var tidnode2 = nodearraylist5
					listnode3 = concat(listnode3, listnode1)
					if tidnode2 != null then
						listnode3.add(tidnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction921
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var tidnode4 = nodearraylist1
					assert tidnode4 isa nullable TId
					var pmodulenamenode1: nullable AModuleName = new AModuleName.init_amodulename(
						null,
						listnode3,
						tidnode4
					)
					node_list = pmodulenamenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction922
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var listnode3 = nodearraylist1
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tidnode5 = nodearraylist2
					assert tidnode5 isa nullable TId
					var pmodulenamenode1: nullable AModuleName = new AModuleName.init_amodulename(
						null,
						listnode4,
						tidnode5
					)
					node_list = pmodulenamenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction923
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var tquadnode2 = nodearraylist1
					assert tquadnode2 isa nullable TQuad
					var tidnode4 = nodearraylist3
					assert tidnode4 isa nullable TId
					var pmodulenamenode1: nullable AModuleName = new AModuleName.init_amodulename(
						tquadnode2,
						listnode3,
						tidnode4
					)
					node_list = pmodulenamenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction924
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode4 = new Array[Object]
					var tquadnode2 = nodearraylist1
					assert tquadnode2 isa nullable TQuad
					var listnode3 = nodearraylist3
					assert listnode3 isa Array[Object]
					listnode4 = concat(listnode4, listnode3)
					var tidnode5 = nodearraylist4
					assert tidnode5 isa nullable TId
					var pmodulenamenode1: nullable AModuleName = new AModuleName.init_amodulename(
						tquadnode2,
						listnode4,
						tidnode5
					)
					node_list = pmodulenamenode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction925
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tidnode1 = nodearraylist1
					node_list = tidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction926
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tclassidnode1 = nodearraylist1
					node_list = tclassidnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction927
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction929
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode2 = nodearraylist1
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode2)
					var pdocnode1: nullable ADoc = new ADoc.init_adoc(
						listnode3
					)
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction930
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode2)
					var pdocnode1: nullable ADoc = new ADoc.init_adoc(
						listnode3
					)
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction932
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					node_list = null
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction933
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var pdocnode1 = nodearraylist1
					node_list = pdocnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction934
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction935
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1318
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var tattridnode4 = nodearraylist3
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1319
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var tkwissetnode2 = nodearraylist1
					assert tkwissetnode2 isa nullable TKwisset
					var pexprnode3 = nodearraylist2
					assert pexprnode3 isa nullable AExpr
					var tattridnode4 = nodearraylist4
					assert tattridnode4 isa nullable TAttrid
					var pexprnode1: nullable AIssetAttrExpr = new AIssetAttrExpr.init_aissetattrexpr(
						tkwissetnode2,
						pexprnode3,
						tattridnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1322
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist2
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1323
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tattridnode3 = nodearraylist3
					assert tattridnode3 isa nullable TAttrid
					var pexprnode1: nullable AAttrExpr = new AAttrExpr.init_aattrexpr(
						pexprnode2,
						tattridnode3
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1326
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist2
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1327
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist4 = p.pop
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode5 = new Array[Object]
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tidnode3 = nodearraylist3
					assert tidnode3 isa nullable TId
					var pexprsnode4 = nodearraylist4
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable ACallExpr = new ACallExpr.init_acallexpr(
						pexprnode2,
						tidnode3,
						pexprsnode4,
						listnode5
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1334
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode2 = nodearraylist1
					assert pexprnode2 isa nullable AExpr
					var tkwinitnode3 = nodearraylist2
					assert tkwinitnode3 isa nullable TKwinit
					var pexprsnode4 = nodearraylist3
					assert pexprsnode4 isa nullable AExprs
					var pexprnode1: nullable AInitExpr = new AInitExpr.init_ainitexpr(
						pexprnode2,
						tkwinitnode3,
						pexprsnode4
					)
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1358
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist3 = p.pop
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var pexprnode1 = nodearraylist1
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1359
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var pexprnode1: nullable AImplicitSelfExpr = new AImplicitSelfExpr.init_aimplicitselfexpr
					node_list = pexprnode1
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1773
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pimportnode1 = nodearraylist1
					if pimportnode1 != null then
						listnode2.add(pimportnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1774
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pimportnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pimportnode2 != null then
						listnode3.add(pimportnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1775
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pexterncodeblocknode1 = nodearraylist1
					if pexterncodeblocknode1 != null then
						listnode2.add(pexterncodeblocknode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1776
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pexterncodeblocknode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pexterncodeblocknode2 != null then
						listnode3.add(pexterncodeblocknode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1777
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pclassdefnode1 = nodearraylist1
					if pclassdefnode1 != null then
						listnode2.add(pclassdefnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1778
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pclassdefnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pclassdefnode2 != null then
						listnode3.add(pclassdefnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1779
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var ppropdefnode1 = nodearraylist1
					if ppropdefnode1 != null then
						listnode2.add(ppropdefnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1780
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var ppropdefnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if ppropdefnode2 != null then
						listnode3.add(ppropdefnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1781
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var psuperclassnode1 = nodearraylist1
					if psuperclassnode1 != null then
						listnode2.add(psuperclassnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1782
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var psuperclassnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if psuperclassnode2 != null then
						listnode3.add(psuperclassnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1785
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pformaldefnode1 = nodearraylist1
					if pformaldefnode1 != null then
						listnode2.add(pformaldefnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1786
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pformaldefnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pformaldefnode2 != null then
						listnode3.add(pformaldefnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1787
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pparamnode1 = nodearraylist1
					if pparamnode1 != null then
						listnode2.add(pparamnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1788
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pparamnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pparamnode2 != null then
						listnode3.add(pparamnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1789
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pclosuredeclnode1 = nodearraylist1
					if pclosuredeclnode1 != null then
						listnode2.add(pclosuredeclnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1790
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pclosuredeclnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pclosuredeclnode2 != null then
						listnode3.add(pclosuredeclnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1791
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pexterncallnode1 = nodearraylist1
					if pexterncallnode1 != null then
						listnode2.add(pexterncallnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1792
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pexterncallnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pexterncallnode2 != null then
						listnode3.add(pexterncallnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1794
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var ptypenode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if ptypenode2 != null then
						listnode3.add(ptypenode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1795
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var pexprnode1 = nodearraylist1
					if pexprnode1 != null then
						listnode2.add(pexprnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1796
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pexprnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pexprnode2 != null then
						listnode3.add(pexprnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1798
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var listnode2 = nodearraylist2
					assert listnode2 isa Array[Object]
					listnode3 = concat(listnode3, listnode1)
					listnode3 = concat(listnode3, listnode2)
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1800
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var pannotationnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if pannotationnode2 != null then
						listnode3.add(pannotationnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1804
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var patargnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if patargnode2 != null then
						listnode3.add(patargnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1808
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var tidnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if tidnode2 != null then
						listnode3.add(tidnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1809
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var tcommentnode1 = nodearraylist1
					if tcommentnode1 != null then
						listnode2.add(tcommentnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1810
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var tcommentnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if tcommentnode2 != null then
						listnode3.add(tcommentnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1811
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist1 = p.pop
					var listnode2 = new Array[Object]
					var teolnode1 = nodearraylist1
					if teolnode1 != null then
						listnode2.add(teolnode1)
					end
					node_list = listnode2
					p.push(p.go_to(_goto), node_list)
	end
end
private class ReduceAction1812
	super ReduceAction
	redef fun action(p: Parser)
	do
					var node_list: nullable Object = null
					var nodearraylist2 = p.pop
					var nodearraylist1 = p.pop
					var listnode3 = new Array[Object]
					var listnode1 = nodearraylist1
					assert listnode1 isa Array[Object]
					var teolnode2 = nodearraylist2
					listnode3 = concat(listnode3, listnode1)
					if teolnode2 != null then
						listnode3.add(teolnode2)
					end
					node_list = listnode3
					p.push(p.go_to(_goto), node_list)
	end
end
